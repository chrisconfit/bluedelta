swagger: "2.0"
info:
  version: "1.0.0"
  title: BlueDelta-API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /users:
    get:
      description: Returns List of 'Users'
      # used as the method name of the controller
      operationId: users-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UsersListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Adds a User
      operationId: users-Create
      parameters:
      - $ref: "#/parameters/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []

  /users/{userId}:
    delete:
      description: Deletes a User
      operationId: users-Delete
      parameters:
      - $ref: "#/parameters/UserId"
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []
    get:
      description: Returns a User
      operationId: users-Get
      parameters:
      - $ref: "#/parameters/UserId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Updates a User
      operationId: users-Update
      parameters:
      - $ref: "#/parameters/UserId"
      - $ref: "#/parameters/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /users/{userId}/orders:
    get:
      description: Returns List of 'Orders' by 'User'
      operationId: orders-ListByUser
      parameters:
      - $ref: "#/parameters/UserId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrdersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /users/{userId}/jeans:
    get:
      description: Returns List of 'Jeans' by 'User'
      operationId: jeans-ListByUser
      parameters:
      - $ref: "#/parameters/UserId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/JeansListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Adds a Jean
      operationId: jeans-Create
      parameters:
      - $ref: "#/parameters/UserId"
      - $ref: "#/parameters/Jean"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Jean"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /users/{userId}/jeans/{jeanId}:
    delete:
      description: Deletes a Jean from a User
      operationId: jeans-Delete
      parameters:
      - $ref: "#/parameters/UserId"
      - $ref: "#/parameters/JeanId"
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Returns a Jean
      operationId: jeans-Get
      parameters:
      - $ref: "#/parameters/UserId"
      - $ref: "#/parameters/JeanId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Jean"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
#      - blue-delta-userPool-authorizer: []
    post:
      description: Updates a Jean
      operationId: jeans-Update
      parameters:
      - $ref: "#/parameters/UserId"
      - $ref: "#/parameters/JeanId"
      - $ref: "#/parameters/Jean"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Jean"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /orders:
    get:
      description: Returns List of 'Orders'
      operationId: orders-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/OrdersListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []
    post:
      description: Adds an Order
      operationId: order-Create
      parameters:
      - $ref: "#/parameters/Order"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Order"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []

  /orders/{orderId}:
    delete:
      description: Deletes an Order
      operationId: orders-Delete
      parameters:
      - $ref: "#/parameters/OrderId"
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []
    get:
      description: Returns an Order
      operationId: orders-Get
      parameters:
      - $ref: "#/parameters/OrderId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Order"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []
    post:
      description: Updates an Order
      operationId: orders-Update
      parameters:
      - $ref: "#/parameters/OrderId"
      - $ref: "#/parameters/Order"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Order"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
       - blue-delta-userPool-authorizer: []

  /orders/{orderId}/comments:
    get:
      description: Returns a list of comments by order
      operationId: comments-List
      parameters:
      - $ref: "#/parameters/OrderId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CommentsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Creates a comment on an order
      operationId: comments-Create
      parameters:
      - $ref: "#/parameters/OrderId"
      - $ref: "#/parameters/Comment"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Comment"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /buttons:
    get:
      description: Returns List of 'Buttons'
      # used as the method name of the controller
      operationId: buttons-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ButtonsListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Adds a Button
      operationId: buttons-Create
      parameters:
      - $ref: "#/parameters/Button"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Button"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /buttons/{buttonId}:
    delete:
      description: Deletes a Button
      operationId: buttons-Delete
      parameters:
      - $ref: "#/parameters/ButtonId"
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    get:
      description: Returns a Button
      # used as the method name of the controller
      operationId: buttons-Get
      parameters:
      - $ref: "#/parameters/ButtonId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Button"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Updates a Button
      operationId: buttons-Update
      parameters:
      - $ref: "#/parameters/ButtonId"
      - $ref: "#/parameters/Button"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Button"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /threads:
    get:
      description: Returns List of 'Threads'
      # used as the method name of the controller
      operationId: threads-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ThreadsListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Adds a Thread
      operationId: threads-Create
      parameters:
      - $ref: "#/parameters/Thread"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Thread"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /threads/{threadId}:
    delete:
      description: Deletes a Thread
      operationId: threads-Delete
      parameters:
      - $ref: "#/parameters/ThreadId"
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    get:
      description: Returns a Thread
      # used as the method name of the controller
      operationId: threads-Get
      parameters:
      - $ref: "#/parameters/ThreadId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Thread"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Updates a Thread
      operationId: threads-Update
      parameters:
      - $ref: "#/parameters/ThreadId"
      - $ref: "#/parameters/Thread"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Thread"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /fabrics:
    get:
      description: Returns List of 'Fabrics'
      # used as the method name of the controller
      operationId: fabrics-List
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/FabricsListResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Adds a Fabric
      operationId: fabrics-Create
      parameters:
      - $ref: "#/parameters/Fabric"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Fabric"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /fabrics/{fabricId}:
    delete:
      description: Deletes a Fabric
      operationId: fabrics-Delete
      parameters:
      - $ref: "#/parameters/FabricId"
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    get:
      description: Returns a Fabric
      # used as the method name of the controller
      operationId: fabrics-Get
      parameters:
      - $ref: "#/parameters/FabricId"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Fabric"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []
    post:
      description: Updates a Fabric
      operationId: fabrics-Update
      parameters:
      - $ref: "#/parameters/FabricId"
      - $ref: "#/parameters/Fabric"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Fabric"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
      - blue-delta-userPool-authorizer: []

  /ping:
    get:
      description: Unsecured ping
      operationId: ping-PingOperation
      responses:
        "200":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
      security:
#      - blue-delta-userPool-authorizer: []

parameters:
  User:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/User"
  UserId:
    in: "path"
    name: "userId"
    required: true
    type: string
  Jean:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Jean"
  JeanId:
    in: "path"
    name: "jeanId"
    required: true
    type: string
  Order:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Order"
  OrderId:
    in: "path"
    name: "orderId"
    required: true
    type: string
  Comment:
    in: "body"
    name: "body"
    required: true
    schema:
      $ref: "#/definitions/Comment"
  Button:
    in: "body"
    name: "body"
    # required: true
    schema:
      $ref: "#/definitions/Button"
  ButtonId:
    in: "path"
    name: "buttonId"
    required: true
    type: string
  Thread:
    in: "body"
    name: "body"
    #required: true
    schema:
      $ref: "#/definitions/Thread"
  ThreadId:
    in: "path"
    name: "threadId"
    required: true
    type: string
  Fabric:
    in: "body"
    name: "body"
    # required: true
    schema:
      $ref: "#/definitions/Fabric"
  FabricId:
    in: "path"
    name: "fabricId"
    required: true
    type: string
definitions:
  CommentsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Comment"

  Comment:
    type: object
    required:
    - message
    properties:
      timestamp:
        type: string
      message:
        type: string

  UsersListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/User"

  User:
    type: object
    required:
    - identityId
    properties:
      identityId:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      gender:
        type: string
      vendors_used:
        type: string
      email:
        type: string
      phone_number:
        type: string
      addresses:
        type: array
        items:
          $ref: "#/definitions/Address"
      jeans:
        type: array
        items:
          $ref: "#/definitions/Jean"

  AddressListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Address"

  Address:
    type: object
    properties:
      address_line_1:
        type: string
      address_line_2:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      primary:
        type: boolean

  OrdersListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Order"

  Order:
    type: object
    required:
    - userId
    - orderItems
    properties:
      orderId:
        type: string
      userId:
        type: string
      shipping_address:
        $ref: "#/definitions/Address"
      price:
        type: string
      vendor:
        $ref: "#/definitions/Vendor"
      rep:
        $ref: "#/definitions/Rep"
      orderType:
        type:integer
      fitDate:
        type:string
      dueDate:
        type:string
      dob:
        type:string	
      orderItems:
        type: array
        items:
          $ref: "#/definitions/OrderItem"
      transaction:
        $ref: "#/definitions/Transaction"
      timeline:
        type: array
        items:
          $ref: "#/definitions/Comment"

  OrderItemsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/OrderItem"

  OrderItem:
    type: object
    required:
    - jean
    properties:
      jean:
        $ref: "#/definitions/Jean"
      status:
        type: string
      tracking:
        type: string
      notes:
        type: string
  
  Vendor:
    type: object
    required:
    - vendorId
    properties:
      vendorId:
        type: string
      name:
        type: string
        
  Rep:
    type: object
    required:
    - repId
    properties:
      repId:
        type: string
      name:
        type: string

  Vendor:
    type: object
    required:
    - vendorId
    properties:
      vendorId:
        type: string
      name:
        type: string

  Rep:
    type: object
    required:
    - repId
    properties:
      repId:
        type: string
      name:
        type: string

  TransactionsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Transaction"

  Transaction:
    type: object
    properties:
      transactionId:
        type: string
      status:
        type: string

  ButtonsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Button"

  Button:
    type: object
    properties:
      buttonId:
        type: string
      name:
        type: string
      thumb:
        type: string
      layer:
        type: string

  FabricsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Fabric"

  Fabric:
    type: object
    properties:
      fabricId:
        type: string
      name:
        type: string
      weight:
        type: integer
        format: int32
        minimum: 0
      description:
        type: string
      materials:
        type: string
      supplier:
        type: string

  ThreadsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Thread"

  Thread:
    type: object
    properties:
      threadId:
        type: string
      name:
        type: string
      thumb:
        type: string
      layer:
        type: string

  MeasurementsListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Measurement"

  Measurement:
    type: object
    properties:
      waist:
        type: number
        format: float
        minimum: 0.0
      seat_down:
        type: number
        format: float
        minimum: 0.0
      seat_right:
        type: number
        format: float
        minimum: 0.0
      rise:
        type: number
        format: float
        minimum: 0.0
      full_rise:
        type: number
        format: float
        minimum: 0.0
      thigh_upper_down:
        type: number
        format: float
        minimum: 0.0
      thigh_upper_right:
        type: number
        format: float
        minimum: 0.0
      thigh_middle_down:
        type: number
        format: float
        minimum: 0.0
      thigh_middle_right:
        type: number
        format: float
        minimum: 0.0
      thigh_lower_down:
        type: number
        format: float
        minimum: 0.0
      thigh_lower_right:
        type: number
        format: float
        minimum: 0.0
      outseam:
        type: number
        format: float
        minimum: 0.0
      knee_up:
        type: number
        format: float
        minimum: 0.0
      knee_right:
        type: number
        format: float
        minimum: 0.0
      calf_up:
        type: number
        format: float
        minimum: 0.0
      calf_right:
        type: number
        format: float
        minimum: 0.0
      leg_opening:
        type: number
        format: float
        minimum: 0.0
      desired_fit:
        type: number
        format: float
        minimum: 0.0

  JeansListResponse:
    required:
    - items
    properties:
      items:
        type: array
        items:
          $ref: "#/definitions/Jean"

  Jean:
    type: object
    properties:
      jeanId:
        type: string
      imageURL:
        type:string
      ordered:
        boolean
      measurement:
        $ref: "#/definitions/Measurement"
      top_thread:
        $ref: "#/definitions/Thread"
      bottom_thread:
        $ref: "#/definitions/Thread"
      accent_thread:
        $ref: "#/definitions/Thread"
      fabric:
        $ref: "#/definitions/Fabric"
      button:
        $ref: "#/definitions/Button"

  ErrorResponse:
    type: object
    required:
      - message
      - type
    properties:
      message:
        type: string
      type:
        type: string

securityDefinitions:
  blue-delta-custom-authorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
  blue-delta-userPool-authorizer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "cognito_user_pools"
  sigv4:
    type: "apiKey"
    name: "Authorization"
    in: "header"
    x-amazon-apigateway-authtype: "awsSigv4"