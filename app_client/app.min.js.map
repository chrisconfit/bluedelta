{"version":3,"sources":["main.js","config/config-overrides-generated.js","services/authentication.service.js","services/aws.service.js","services/config.service.js","services/data.service.js","services/jean.service.js","services/popups.service.js","services/preloader.factory.js","directives/choosers/chooser.controller.js","directives/choosers/chooser.directive.js","directives/choosers/fabric-chooser.directive.js","directives/choosers/gender-chooser.directive.js","directives/choosers/style-chooser.directive.js","directives/image-stack/image-stack.controller.js","directives/image-stack/image-stack.directive.js","directives/jean-list-delete/jean-list.directive.js","directives/navigation/navigation.controller.js","directives/navigation/navigation.directive.js","directives/slider/slider.controller.js","directives/slider/slider.directive.js","pages/admin/admin.controller.js","pages/closet/closet.controller.js","pages/customizer/customizer.controller.js","pages/home/home.controller.js","pages/auth/login/login.controller.js","pages/auth/register/register.controller.js","services/blue-delta-sdk/src/ApiClient.js","services/blue-delta-sdk/src/index.js","services/blue-delta-sdk/src/api/DefaultApi.js","services/blue-delta-sdk/src/model/Button.js","services/blue-delta-sdk/src/model/ButtonsListResponse.js","services/blue-delta-sdk/src/model/Fabric.js","services/blue-delta-sdk/src/model/FabricsListResponse.js","services/blue-delta-sdk/src/model/Jean.js","services/blue-delta-sdk/src/model/Measurement.js","services/blue-delta-sdk/src/model/Order.js","services/blue-delta-sdk/src/model/OrderItem.js","services/blue-delta-sdk/src/model/OrdersListResponse.js","services/blue-delta-sdk/src/model/Thread.js","services/blue-delta-sdk/src/model/ThreadsListResponse.js","services/blue-delta-sdk/src/model/Transaction.js","services/blue-delta-sdk/src/model/User.js","services/blue-delta-sdk/src/model/UsersListResponse.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","otherwise","redirectTo","html5Mode","run","$rootScope","$location","aws","$on","event","nextRoute","currentRoute","locked","indexOf","path","getCurrentUserFromLocalStorage","then","result","err","angular","module","filter","input","replace","min","max","key","retObj","display","configOverridesGenerated","REGION","PROFILE_IMAGES_S3_BUCKET","API_ENDPOINT","USER_POOL_ID","CLIENT_ID","IDENTITY_POOL_ID","authentication","$http","$window","$q","saveToken","token","localStorage","getToken","isLoggedIn","payload","split","atob","JSON","parse","exp","Date","now","currentUser","console","log","email","name","isAdmin","roles","permissions","register","userDetails","login","user","authenticateCognitoUser","password","logout","removeItem","service","$inject","AWSConfig","_getUserPool","poolData","UserPoolId","ClientId","userPool","AWSCognito","CognitoIdentityServiceProvider","CognitoUserPool","_getAuthenticationDetails","uname","pword","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","_getCognitoUser","upool","userData","Pool","cognitoUser","CognitoUser","_buildAttribute","keyName","value","attribute","Name","Value","CognitoUserAttribute","_buildAttributeList","attributeBuilder","obj","attrToAdd","attrList","push","getUserFromLocalStorage","username","getSession","session","alert","isValid","deleteCognitoUser","getCurrentUser","deleteUser","defer","authenticateUser","onSuccess","resolve","getAccessToken","getJwtToken","idToken","jwtToken","onFailure","reject","newPasswordRequired","userAttributes","requiredAttributes","promise","signupForApplication","emailAddress","attributeList","signUp","updateAttributesOnUser","updateAttributes","deleteUserAttributes","deleteAttributes","verifyUserAttribute","attributeName","getAttributeVerificationCode","inputVerificationCode","verificationCode","prompt","verifyAttribute","this","retrieveUserAttributes","getUserAttributes","i","length","getName","getValue","resendConfirmationCode","confirmRegistration","confirmationCode","changePassword","oldPassword","newPassword","forgotPasswordFlow","forgotPassword","confirmPassword","signUserOut","signOut","signCurrentUserOut","signUserOutGlobally","globalSignOut","AWS","credentials","CognitoIdentityCredentials","IdentityPoolId","confirmRegisteredUnauthenticatedUser","userName","meanData","getOptions","get","headers","Authorization","getJeanById","id","callback","response","data","j","ret","getJeansByUser","userId","getProfile","getStyles","getThreads","getHardware","getFabrics","getGenders","jean","set","property","createNew","title","gender","style","fabric","accent_thread","top_thread","bottom_thread","Math","floor","random","popups","denim","hiw","infoPop","jeanProfile","preloaderFunc","Preloader","imageLocations","imageCount","loadCount","errorCount","states","PENDING","LOADING","RESOLVED","REJECTED","state","deferred","preloadImages","preloader","load","prototype","constructor","isInitiated","isRejected","isResolved","loadImageLocation","handleImageError","imageLocation","handleImageLoad","notify","percent","ceil","image","element","Image","bind","$apply","target","src","attr","factory","chooserCtrl","$scope","$element","$timeout","scrollToLeft","el","scrollTo","scrollDuration","offsetWidth","maxLeft","scrollWidth","stepNum","distance","scrollLeft","scrollStep","scrollTest","a","b","scrollInterval","setInterval","newScroll","clearInterval","chvm","breakPoint","selectorCoords","top","left","$watch","newValue","oldValue","step","jeanKey","activeElement","document","querySelector","prop","selector","css","innerWidth","chooser","selectAttr","$event","text","querySelectorAll","right","opacity","jeanSet","val","restrict","scope","dataset","active","directive","template","link","changeTemplate","screenWidth","viewUrl","onresize","weightFilter","weight","genderChooser","styleChooser","checkGenderFilter","istackCtrl","isvm","centerPan","zoom","pan","x","y","isMobile","toggleZoom","touchEnd","dragTracker","returnPan","images","setTimeout","transform-origin","touchStart","e","swipeStart","touches","clientX","clientY","swipe","zoomDrag","touchMove","preventDefault","touch","drag","clientWidth","clientHeight","bounds","bottom","move","dragPan","u","direction","frame","window","innerHeight","height","width","deltaX","deltaY","abs","isFinal","scanImage","fWidth","fHeight","rect","getBoundingClientRect","rootDoc","ownerDocument","documentElement","offsetT","pageYOffset","clientTop","offsetL","pageXOffset","clientLeft","xPosition","yPosition","trackMouse","pageX","pageY","imageStack","ele","attrs","ctrl","on","navigationCtrl","$route","vm","accessToken","drops","acct","mobileMenu","reload","navigation","sliderCtrl","imagesLoaded","slides","currentIndex","setCurrentSlideIndex","index","isCurrentSlideIndex","nextSlide","prevSlide","slider","imageClick","adminCtrl","success","error","closetCtrl","$filter","jeans","setupData","func","dataKey","dataLookup","includes","dataSet","selected","copyJean","selectJean","customizerCtrl","$routeParams","landscapeDetect","ua","navigator","userAgent","toLowerCase","isAndroid","orientation","landscape","supportsOrientationChange","orientationEvent","addEventListener","jean_id","action","Object","keys","panel","panelTemplate","panelDir","panelStep","changeStep","undefined","updateActiveItem","activeItem","styleByGender","dataInfo","dataById","getData","d","res","all","current","original","createThumb","loadImage","onload","cntxt","drawImage","onerror","canvas","createElement","getContext","promises","imagesElements","getElementsByClassName","results","dataUrl","toDataURL","open","homeCtrl","$animate","loginCtrl","messages","message","type","reset","onSubmit","errors","registerCtrl","$sce","formStep","setMessage","resetMessage","registerUser","confirmUser","code","trustAsHtml","resendCode","root","define","amd","exports","require","BlueDeltaApi","ApiClient","superagent","basePath","authentications","blue-delta-userPool-authorizer","in","sigv4","defaultHeaders","timeout","cache","paramToString","param","toJSON","toString","buildUrl","pathParams","match","url","_this","fullMatch","hasOwnProperty","encodeURIComponent","isJsonMime","contentType","Boolean","jsonPreferredMime","contentTypes","isFileParam","ReadStream","Buffer","Blob","File","normalizeParams","params","newParams","Array","isArray","CollectionFormatEnum","CSV","SSV","TSV","PIPES","MULTI","buildCollectionParam","collectionFormat","map","join","Error","applyAuthToRequest","request","authNames","forEach","authName","auth","apiKey","apiKeyPrefix","query","deserialize","returnType","status","body","convertToType","callApi","httpMethod","queryParams","headerParams","formParams","bodyParam","accepts","toUpperCase","getTime","header","send","_formParams","attach","field","accept","end","parseDate","str","parseInt","parseFloat","String","constructFromObject","itemType","item","keyType","valueType","k","instance","Button","ButtonsListResponse","Fabric","FabricsListResponse","Jean","Measurement","Order","OrderItem","OrdersListResponse","Thread","ThreadsListResponse","Transaction","User","UsersListResponse","DefaultApi","apiClient","buttonsButtonIdOptions","buttonId","postBody","buttonsCreate","button","buttonsDelete","buttonsGet","buttonsList","buttonsOptions","buttonsUpdate","fabricsCreate","fabricsDelete","fabricId","fabricsFabricIdOptions","fabricsGet","fabricsList","fabricsOptions","fabricsUpdate","orderCreate","order","ordersDelete","orderId","ordersGet","ordersList","ordersListByUser","ordersOptions","ordersOrderIdOptions","ordersUpdate","pingOptions","pingPingOperation","threadsCreate","thread","threadsDelete","threadId","threadsGet","threadsList","threadsOptions","threadsThreadIdOptions","threadsUpdate","usersCreate","usersDelete","usersGet","usersList","usersOptions","usersUpdate","usersUserIdOptions","usersUserIdOrdersOptions","items","jeanId","measurementId","identityId"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\n\n  angular.module('bdApp', ['ngRoute', 'ngAnimate','ngSanitize', 'angular-gestures']); \n  \n  \n  function config ($routeProvider, $locationProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: '/pages/home/home.view.html',\n        controller: 'homeCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/register', {\n        templateUrl: '/pages/auth/register/register.view.html',\n        controller: 'registerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/login', {\n        templateUrl: '/pages/auth/login/login.view.html',\n        controller: 'loginCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/closet', {\n        templateUrl: '/pages/closet/closet.view.html',\n        controller: 'closetCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/customizer/:jean_id?/:action?', {\n        templateUrl: '/pages/customizer/customizer.view.html',\n        controller: 'customizerCtrl',\n        controllerAs: 'vm'\n      })\n      .when('/admin', {\n        templateUrl: '/pages/admin/admin.view.html',\n        controller: 'adminCtrl',\n        controllerAs: 'vm'\n      })\n      .otherwise({redirectTo: '/'});\n\n    // use the HTML5 History API\n    $locationProvider.html5Mode(true);\n    \n   }\n\n  function run($rootScope, $location, aws) {\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\n\t    var locked = [\n\t\t    '/closet'\n\t    ];\n\t    if (locked.indexOf($location.path()) >= 0 ){\n\t\t    aws.getCurrentUserFromLocalStorage().then(\n\t\t\t    function(result){\n\t\t\t\t    return true;\n\t\t\t\t  },\n\t\t\t\t  function(err){\n\t\t\t\t\t  $location.path('/login');\n\t\t\t\t\t}\n\t\t    );\n\t  \t}\n    });\n  }\n  \n  angular\n    .module('bdApp')\n    .config(['$routeProvider', '$locationProvider', config])\n    .run(['$rootScope', '$location', 'aws', run])\n\t\t.filter('spaceless',function() {\n\t    return function(input) {\n\t      if (input) {\n\t      \treturn input.replace(/\\s+/g, '-');    \n\t      }\n\t    }\n\t\t})\n\t\t.filter('scoreToSpace',function() {\n\t    return function(input) {\n\t      if (input) {\n\t      \treturn input.replace(/_+/g, ' ');    \n\t      }\n\t    }\n\t\t})\n\t\t.filter('minMax',function(min, max, key) {\n\t\t\treturn function(input){\n\t\t\t\tif (min && input[key] < min) return false;\n\t\t\t\tif (max && input[key] > max) return false;\n\t\t    return true;\n\t\t  }  \n\t\t})\n\t\t.filter('displayName',function() {\n\t\t\treturn function(input){\t\t\t\t\n\t\t\t\treturn input ? input.replace(/Raw Denim/g, \"\") : false;\n\t\t  }  \n\t\t})\n\t\t\n\t\t.filter('listData',function() {\n\t\t\treturn function(input){\n\t\t\t\tvar retObj = {}; \n\t\t\t\tvar display = [\n\t\t\t\t\t'fabric',\n\t\t\t\t\t'accent_thread',\n\t\t\t\t\t'top_thread',\n\t\t\t\t\t'bottom_thread',\n\t\t\t\t\t'gender',\n\t\t\t\t\t'style'\n\t\t\t\t];\n\t\t\t\n\t\t\t\tfor (key in input){\n\t\t\t\t\tif (display.indexOf(key)>=0)\n\t\t\t\t\t\tretObj[key] = input[key];\t\t\t\n\t\t\t\t}\n\t\t\t\treturn retObj;\n\t\t  }  \n\t\t})\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n})();","// Autogenerated file, do not modify directly\n\n(function() {\n\nconst configOverridesGenerated = {\n  \"REGION\": \"us-east-1\",\n  \"PROFILE_IMAGES_S3_BUCKET\": \"blue-delta-api-development-stack-userdatabucket-12z57hiicf3xy\",\n  \"API_ENDPOINT\": \"https://kd6f1omjzc.execute-api.us-east-1.amazonaws.com/development\",\n  \"USER_POOL_ID\": \"us-east-1_UvVeNoe5z\",\n  \"CLIENT_ID\": \"6hdrpk1j20qmjhfdiga31uia80\",\n  \"IDENTITY_POOL_ID\": \"us-east-1:60250bd7-bc76-4ab7-8813-2369461cb881\"\n};\n\nreturn configOverridesGenerated;\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .service('authentication', authentication);\n\n  authentication.$inject = ['$http', '$window', 'aws', '$q'];\n  function authentication ($http, $window, aws, $q) {\n\n    var saveToken = function (token) {\n      $window.localStorage['mean-token'] = token;\n    };\n\n    var getToken = function () {\n      return $window.localStorage['mean-token'];\n    };\n\n    var isLoggedIn = function() {\n      var token = getToken();\n      var payload;\n\n      if(token){\n        payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    };\n\n    var currentUser = function() {\n      if(isLoggedIn()){\n        var token = getToken();\n        console.log(token);\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        return {\n          email : payload.email,\n          name : payload.name\n        };\n      }\n    };\n\n\t\t\n\t\tvar isAdmin = function(){\n\t\t\tif(isLoggedIn()){\n        var token = getToken();\n\n        var payload = token.split('.')[1];\n        payload = $window.atob(payload);\n        payload = JSON.parse(payload);\n        console.log(payload);\n        var roles = payload.permissions;\n\t\t\t\treturn roles.indexOf('admin') !== -1;\n      }\n\t\t}\n\n    \n\n    \n\n\n//\t\tconsole.log(aws.authenticateCognitoUser('cplefevre', 'ConfitConfit@123'));\n\n\t\tvar register = function(userDetails){\n\t\t\t//console.log(userDetails);\n\t\t//\tconsole.log(aws.signupForApplication('hello@confitdesign.com', 'ConfitConfit@123'));\t\n\t\t}\n    \n\n\t\t\n    \n\n    login = function(user) {\n\t    \n\t    aws.authenticateCognitoUser(user, password);\n\t\t};\n\n    logout = function() {\n      $window.localStorage.removeItem('mean-token');\n    };\n\n    return {\n      //userAttrList: userAttrList,\n      //createUserAttributeList: createUserAttributeList,\n      //userPool: userPool,\n\t    isAdmin : isAdmin,\n      currentUser : currentUser,\n      saveToken : saveToken,\n      getToken : getToken,\n      isLoggedIn : isLoggedIn,\n      register : register,\n      login : login,\n      logout : logout\n    };\n  }\n\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .service('aws', aws);\n\n  aws.$inject = ['$http', '$window', '$q', 'AWSConfig'];\n  function aws ($http, $window, $q, AWSConfig) {\n\t\t\t\n    function _getUserPool() {\n      var poolData = { UserPoolId : AWSConfig.USER_POOL_ID, ClientId : AWSConfig.CLIENT_ID };\n      var userPool = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserPool(poolData);\n      return userPool;\n    }\n\n    function _getAuthenticationDetails(uname, pword) {\n      var authenticationData = {\n        Username : uname,\n        Password : pword,\n      };\n      var authenticationDetails = new AWSCognito.CognitoIdentityServiceProvider.AuthenticationDetails(authenticationData);\n      return authenticationDetails;\n    }\n      \n    function _getCognitoUser(uname, upool) {\n      var userData = { Username : uname, Pool : upool };\n      var cognitoUser = new AWSCognito.CognitoIdentityServiceProvider.CognitoUser(userData);\n      return cognitoUser;\n    }\n\n    function _buildAttribute(keyName, value) {\n      var attribute = {\n        Name: keyName,\n        Value: value\n      }\n      var result = new AWSCognito.CognitoIdentityServiceProvider.CognitoUserAttribute(attribute);\n      return result;\n    }\n\n    function _buildAttributeList(attributeBuilder, obj) {\n        var attrList = [];\n        var attrToAdd;\n        for (var key in obj) {\n          attrToAdd = attributeBuilder(key, obj[key]);\n          attrList.push(attrToAdd);\n        }\n        return attrList;\n      }\n    \n\t\t\t\n    getUserFromLocalStorage = function(username) {\n      var cognitoUser = _getCognitoUser(username, _getUserPool());\n      if (cognitoUser != null) {\n          cognitoUser.getSession(function(err, session) {\n              if (err) {\n                  alert(err);\n                  return;\n              }\n              console.log('session validity: ' + session.isValid());\n          });\n      }\n    }\n\n    deleteCognitoUser = function() {\n      var cognitoUser = _getUserPool().getCurrentUser();\n      cognitoUser.deleteUser(function(err, result) {\n        if (err) {\n            alert(err);\n            return;\n        }\n        console.log('call result: ' + result);\n      });\n    }\n\n    authenticateCognitoUser = function(username, password) {\n      var authenticationDetails = _getAuthenticationDetails(username, password);\n      var cognitoUser = _getCognitoUser(username, _getUserPool());\n      \n      var defer = $q.defer();\n      \n      cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: function (result) {\n\t\t\t\t\tconsole.log(\"succ\");\n\t\t\t\t\tdefer.resolve(result);\n\t\t\t\t\tconsole.log('access token + ' + result.getAccessToken().getJwtToken());\n\t\t\t\t\t//Use the idToken for Logins Map when Federating User Pools with Cognito Identity or when passing through an Authorization Header to an API Gateway Authorizer\n\t\t\t\t\tconsole.log('idToken + ' + result.idToken.jwtToken);\n        },\n        onFailure: function(err) {\n          defer.reject(err);\n        }, \n        newPasswordRequired: function(userAttributes, requiredAttributes) {\n          // User was signed up by an admin and must provide new\n          // password and required attributes, if any, to complete\n          // authentication.\n\t\t\t\t\tconsole.log(userAttributes, requiredAttributes);\n\n          // the api doesn't accept this field back\n          //delete userAttributes.email_verified;\n\n          // Get these details and call\n\t        // cognitoUser.completeNewPasswordChallenge(\"ConfitConfit@123\", userAttributes, this);\n\t      }\n      });\n      \n      return defer.promise;\n    }\n\t\t\n\n    signupForApplication = function(emailAddress, password) {\n\t    \n\t    var defer = $q.defer();\n\t    \n      var attributeList = _buildAttributeList(_buildAttribute, {email: emailAddress});\n      var cognitoUser;\n      _getUserPool().signUp(emailAddress, password, attributeList, null, function(err, result) {\n        if (err) defer.reject(err);\n        else defer.resolve(result);\n      });\n      \n      return defer.promise;\n    }\n\n    updateAttributesOnUser = function(username, obj) {      \n      var attributeList = _buildAttributeList(_buildAttribute, obj);\n      var cognitoUser   = _getCognitoUser(username, _getUserPool());\n      cognitoUser.updateAttributes(attributeList, function(err, result) {\n          if (err) {\n              alert(err);\n              return;\n          }\n          console.log('call result: ' + result);\n      });\n    }\n\n    deleteUserAttributes = function(cognitoUser, attributeList) {\n      cognitoUser.deleteAttributes(attributeList, function(err, result) {\n          if (err) {\n              alert(err);\n              return;\n          }\n          console.log('call result: ' + result);\n      });\n    }\n\n    verifyUserAttribute = function(cognitoUser, attributeName) {\n        cognitoUser.getAttributeVerificationCode(attributeName, {\n          onSuccess: function (result) {\n              console.log('call result: ' + result);\n          },\n          onFailure: function(err) {\n              alert(err);\n          },\n          inputVerificationCode: function() {\n              var verificationCode = prompt('Please input verification code: ' ,'');\n              cognitoUser.verifyAttribute(attributeName, verificationCode, this);\n          }\n      });\n    }\n\n    retrieveUserAttributes = function(cognitoUser) {\n      cognitoUser.getUserAttributes(function(err, result) {\n          if (err) {\n              alert(err);\n              return;\n          }\n          for (i = 0; i < result.length; i++) {\n              console.log('attribute ' + result[i].getName() + ' has value ' + result[i].getValue());\n          }\n      });\n    }\n\n    resendConfirmationCode = function(cognitoUser) {\n\t    if(!cognitoUser.resendConfirmationCode){\n\t\t  \t//We've just got an email address...\n\t\t  \tcognitoUser = _getCognitoUser(cognitoUser, _getUserPool());\n\t    }\n\t    \n      cognitoUser.resendConfirmationCode(function(err, result) {\n\t      \n\t      //TODO: This function throws an error on success that obscures a promise. Once the SDK has been fixed, we need to implement a promise structure to properly display results on the front end.\n        if (err) {\n          console.log(err);\n          return;\n        }\n        \n        //code has been sent\n        return true;\n      });\n    }\n    \n   confirmRegistration = function(cognitoUser, confirmationCode) {\n      cognitoUser.confirmRegistration(confirmationCode, true, function(err, result) {\n          if (err) {\n              alert(err);\n              return;\n          }\n          alert(result);\n      });\n    }\n\n    changePassword = function(cognitoUser, oldPassword, newPassword) {\n      cognitoUser.changePassword(oldPassword, newPassword, function(err, result) {\n        if (err) {\n            alert(err);\n            return;\n        }\n        console.log('call result: ' + result);\n      });\n    }\n\n    forgotPasswordFlow = function(cognitoUser) {\n      cognitoUser.forgotPassword({\n        onSuccess: function (result) {\n            console.log('call result: ' + result);\n        },\n        onFailure: function(err) {\n            alert(err);\n        },\n        \n        inputVerificationCode: function() {\n            var verificationCode = prompt('Please input verification code ' ,'');\n            var newPassword = prompt('Enter new password ' ,'');\n            cognitoUser.confirmPassword(verificationCode, newPassword, this);\n        }\n      });\n    }\n\n    deleteUser = function(cognitoUser) {\n      cognitoUser.deleteUser(function(err, result) {\n        if (err) {\n            alert(err);\n            return;\n        }\n        console.log('call result: ' + result);\n      });\n    }\n\n    signUserOut = function(cognitoUser) {\n      if (cognitoUser != null) {\n          cognitoUser.signOut();\n      }\n    }\n    \n    signCurrentUserOut = function() {\n\t  \tvar cognitoUser = _getUserPool().getCurrentUser();\n      if (cognitoUser != null) {\n          cognitoUser.signOut();\n      }\n    }\n\n\n    signUserOutGlobally = function(cognitoUser) {\n      cognitoUser.globalSignOut();\n    }\n\n    getCurrentUserFromLocalStorage = function() {\n\n\t    var defer = $q.defer();\n\t    \n      var cognitoUser = _getUserPool().getCurrentUser();\n      \n    \n      if (cognitoUser != null) {\n        cognitoUser.getSession(function(err, session) {\n        \t\n        \t//TODO: Decide if further error handling is necessary...\n          if (err) {\n            defer.reject(err);\n            return defer.promise;\n          }\n\t\t\t\t\t\n\t\t\t\t\tAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n            IdentityPoolId : AWSConfig.IDENTITY_POOL_ID\n          });\n\t          \n          //var loginKey = 'cognito-idp.'+AWSConfig.REGION+'.amazonaws.com/'+AWSConfig.USER_POOL_ID;\n          defer.resolve(session);\n          \n\t\t\t\t\t// Instantiate aws sdk service objects now that the credentials have been updated.\n          // example: var s3 = new AWS.S3();\n        });\n      }else{\n\t      defer.reject(\"User does not exist\");\n      }\n      \n      return defer.promise;\n    }\n\t\t\n\t\t\n    confirmRegisteredUnauthenticatedUser = function(userName, confirmationCode) {\n\t    \n      var cognitoUser = _getCognitoUser(userName, _getUserPool());\n\t    var defer = $q.defer();\n      \n      cognitoUser.confirmRegistration(confirmationCode, true, function(err, result) {\n        if (err) defer.reject(err);\n        else defer.resolve(result);\n      });\n      \n      return defer.promise;\n    }\n    \n\n    changePassword = function(cognitoUser, oldPassword, newPassword) {\n      cognitoUser.changePassword(oldPassword, newPassword, function(err, result) {\n        if (err) {\n            alert(err);\n            return;\n        }\n        console.log('call result: ' + result);\n      });\n    }\n    \n    \n    \n      \n    \n    return {\n\t    getUserFromLocalStorage: getUserFromLocalStorage,\n      deleteCognitoUser: deleteCognitoUser,\n      authenticateCognitoUser: authenticateCognitoUser,\n      signupForApplication: signupForApplication,\n      updateAttributesOnUser: updateAttributesOnUser,\n      deleteUserAttributes: deleteUserAttributes,\n      verifyUserAttribute: verifyUserAttribute,\n      retrieveUserAttributes: retrieveUserAttributes,\n      resendConfirmationCode: resendConfirmationCode,\n      confirmRegistration: confirmRegistration,\n      changePassword: changePassword,\n      forgotPasswordFlow: forgotPasswordFlow,\n      deleteUser: deleteUser,\n      signUserOut: signUserOut,\n      signUserOutGlobally: signUserOutGlobally,\n      getCurrentUserFromLocalStorage: getCurrentUserFromLocalStorage,\n      confirmRegisteredUnauthenticatedUser: confirmRegisteredUnauthenticatedUser,\n      signCurrentUserOut:signCurrentUserOut\n    };\n  }\n})();","// Autogenerated file, do not modify directly\n(function () {\n  angular \n    .module('bdApp')\n    .service('AWSConfig', AWSConfig);\n      \n  function AWSConfig () {\n\t\treturn{\n\t\t\t\"REGION\": \"us-east-1\",\n\t\t  \"PROFILE_IMAGES_S3_BUCKET\": \"blue-delta-api-development-stack-userdatabucket-12z57hiicf3xy\",\n\t\t  \"API_ENDPOINT\": \"https://kd6f1omjzc.execute-api.us-east-1.amazonaws.com/development\",\n\t\t  \"USER_POOL_ID\": \"us-east-1_UvVeNoe5z\",\n\t\t  \"CLIENT_ID\": \"6hdrpk1j20qmjhfdiga31uia80\",\n\t\t  \"IDENTITY_POOL_ID\": \"us-east-1:60250bd7-bc76-4ab7-8813-2369461cb881\"\n\t\t}\n  }\n\n\n})();","(function() {\n\n  angular\n    .module('bdApp')\n    .service('meanData', meanData);\n\n  meanData.$inject = ['$http', 'authentication'];\n  function meanData ($http, authentication) {\n\t\t\n\t\t/*\n    var getProfile = function () {\n      return $http.get('/api/profile', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n    */\n    var getOptions = function () {\t    \n      return $http.get('/api/options', {\n        headers: {\n          Authorization: 'Bearer '+ authentication.getToken()\n        }\n      });\n    };\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tvar getJeanById = function(id, callback){\n\t\t\t$http.get('/data/chris-jeans.json').then(function(response){\n\t\t\t\tvar jeans = response.data;\n\t\t\t\tfor(j=0; j<response.data.length; j++){\n\n\t\t\t\t\tif (response.data[j].id == id){\n\t\t\t\t\t\tconsole.log('jean found');\n\t\t\t\t\t\tvar ret = response.data[j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcallback(ret);\n\n\t\t\t});\n\t\t}\n\t\t\n\t\t//Placeholders\n\t\tvar getJeansByUser = function(userId){\n\t\t\treturn $http.get('/data/chris-jeans.json');\n\t\t};\t\t\n\t\tvar getProfile = function(){\n\t\t\treturn $http.get('/data/profile.json');\n\t\t};\n\t\t\n\t\tvar getStyles = function(){\n\t\t\treturn $http.get('/data/styles.json');\n\t\t};\n\t\t\n\t\tvar getThreads = function(){\n\t\t\treturn $http.get('/data/threads.json');\n\t\t};\n\t\t\n\t\tvar getHardware = function(){\n\t\t\treturn $http.get('/data/buttons.json');\n\t\t};\n\t\t\n\t\tvar getFabrics = function(){\n\t\t\treturn $http.get('/data/fabrics.json');\n\t\t};\n\t\t\n\t\t\n\t\tvar getGenders = function(){\n\t\t\treturn $http.get('/data/genders.json');\n\t\t};\n\t\t\n\t\t\n\t\t\n\t\t\n    return {\n\t    getJeanById: getJeanById,\n\t    getJeansByUser : getJeansByUser,\n      getProfile : getProfile,\n      getOptions : getOptions,\n      getStyles : getStyles,\n      getThreads : getThreads,\n      getHardware: getHardware,\n      getFabrics: getFabrics,\n      getGenders: getGenders\n    };\n  }\n\n})();","\n(function() {\n\n  angular\n    .module('bdApp')\n    .service('jean', jean);\n\n  function jean() {\n\t\t\n   \tdata = {};\n\t\t\n\t\tset = function(property, value){\n\t\t\tthis.data[property] = value;\n\t\t};\n\t\t\n\t\tcreateNew = function(jean){\n\t\t\tif (!jean){\n\t\t\t\tthis.data = {\n\t\t\t\t\t\"gender\" : 1,\n\t\t\t\t\t\"style\" : 1,\n\t\t\t\t\t\"fabric\" : \"1004\",\n\t\t\t\t\t\"accent_thread\" : \"1\",\n\t\t\t\t\t\"top_thread\" : \"1\",\n\t\t\t\t\t\"bottom_thread\" : \"1\",\n\t\t\t\t\t\"id\":Math.floor(Math.random() * 1000000000)\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.data = {\n\t\t\t\t\t\"title\" : \"Copy of \"+jean.data.title,\n\t\t\t\t\t\"gender\" : jean.data.gender,\n\t\t\t\t\t\"style\" : jean.data.style,\n\t\t\t\t\t\"fabric\" : jean.data.fabric,\n\t\t\t\t\t\"accent_thread\" : jean.data.accent_thread,\n\t\t\t\t\t\"top_thread\" : jean.data.top_thread,\n\t\t\t\t\t\"bottom_thread\" : jean.data.bottom_thread,\n\t\t\t\t\t\"id\":Math.floor(Math.random() * 1000000000)\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n    return {\n      data : data,\n      set : set,\n      createNew :createNew\n    };\n    \n  }\n\n})();","\n(function() {\n\n  angular\n    .module('bdApp')\n    .service('popups', popups);\n\n  function popups() {\n\t\t\n    return {\n      denim : false,\n      hiw : false,\n      infoPop:false,\n      jeanProfile:false\n    };\n    \n  }\n\n})();","angular.module('bdApp')\n.factory('preloader', preloaderFunc);\n\npreloaderFunc.$inject = ['$q', '$rootScope'];\nfunction preloaderFunc( $q, $rootScope ) {\n  // I manage the preloading of image objects. Accepts an array of image URLs.\n  function Preloader( imageLocations ) {\n      // I am the image SRC values to preload.\n      this.imageLocations = imageLocations;\n      // As the images load, we'll need to keep track of the load/error\n      // counts when announing the progress on the loading.\n      this.imageCount = this.imageLocations.length;\n      this.loadCount = 0;\n      this.errorCount = 0;\n      // I am the possible states that the preloader can be in.\n      this.states = {\n          PENDING: 1,\n          LOADING: 2,\n          RESOLVED: 3,\n          REJECTED: 4\n      };\n      // I keep track of the current state of the preloader.\n      this.state = this.states.PENDING;\n      // When loading the images, a promise will be returned to indicate\n      // when the loading has completed (and / or progressed).\n      this.deferred = $q.defer();\n      this.promise = this.deferred.promise;\n  }\n  // ---\n  // STATIC METHODS.\n  // ---\n  // I reload the given images [Array] and return a promise. The promise\n  // will be resolved with the array of image locations.\n  Preloader.preloadImages = function( imageLocations ) {\n      var preloader = new Preloader( imageLocations );\n      return( preloader.load() );\n  };\n  // ---\n  // INSTANCE METHODS.\n  // ---\n  Preloader.prototype = {\n      // Best practice for \"instnceof\" operator.\n      constructor: Preloader,\n      // ---\n      // PUBLIC METHODS.\n      // ---\n      // I determine if the preloader has started loading images yet.\n      isInitiated: function isInitiated() {\n          return( this.state !== this.states.PENDING );\n      },\n      // I determine if the preloader has failed to load all of the images.\n      isRejected: function isRejected() {\n          return( this.state === this.states.REJECTED );\n      },\n      // I determine if the preloader has successfully loaded all of the images.\n      isResolved: function isResolved() {\n          return( this.state === this.states.RESOLVED );\n      },\n      // I initiate the preload of the images. Returns a promise.\n      load: function load() {\n          // If the images are already loading, return the existing promise.\n          if ( this.isInitiated() ) {\n              return( this.promise );\n          }\n          this.state = this.states.LOADING;\n          for ( var i = 0 ; i < this.imageCount ; i++ ) {\n              this.loadImageLocation( this.imageLocations[ i ] );\n          }\n          // Return the deferred promise for the load event.\n          return( this.promise );\n      },\n      // ---\n      // PRIVATE METHODS.\n      // ---\n      // I handle the load-failure of the given image location.\n      handleImageError: function handleImageError( imageLocation ) {\n          this.errorCount++;\n          // If the preload action has already failed, ignore further action.\n          if ( this.isRejected() ) {\n              return;\n          }\n          this.state = this.states.REJECTED;\n          this.deferred.reject( imageLocation );\n      },\n      // I handle the load-success of the given image location.\n      handleImageLoad: function handleImageLoad( imageLocation ) {\n          this.loadCount++;\n          // If the preload action has already failed, ignore further action.\n          if ( this.isRejected() ) {\n              return;\n          }\n          // Notify the progress of the overall deferred. This is different\n          // than Resolving the deferred - you can call notify many times\n          // before the ultimate resolution (or rejection) of the deferred.\n          this.deferred.notify({\n              percent: Math.ceil( this.loadCount / this.imageCount * 100 ),\n              imageLocation: imageLocation\n          });\n          // If all of the images have loaded, we can resolve the deferred\n          // value that we returned to the calling context.\n          if ( this.loadCount === this.imageCount ) {\n              this.state = this.states.RESOLVED;\n              this.deferred.resolve( this.imageLocations );\n          }\n      },\n      // I load the given image location and then wire the load / error\n      // events back into the preloader instance.\n      // --\n      // NOTE: The load/error events trigger a $digest.\n      loadImageLocation: function loadImageLocation( imageLocation ) {\n          var preloader = this;\n          // When it comes to creating the image object, it is critical that\n          // we bind the event handlers BEFORE we actually set the image\n          // source. Failure to do so will prevent the events from proper\n          // triggering in some browsers.\n          // --\n          // The below removes a dependency on jQuery, based on a comment\n          // on Ben Nadel's original blog by user Adriaan:\n          // http://www.bennadel.com/members/11887-adriaan.htm\n          var image = angular.element( new Image() )\n              .bind('load', function( event ) {\n                  // Since the load event is asynchronous, we have to\n                  // tell AngularJS that something changed.\n                  $rootScope.$apply(\n                      function() {\n                          preloader.handleImageLoad( event.target.src );\n                          // Clean up object reference to help with the\n                          // garbage collection in the closure.\n                          preloader = image = event = null;\n                      }\n                  );\n              })\n              .bind('error', function( event ) {\n                  // Since the load event is asynchronous, we have to\n                  // tell AngularJS that something changed.\n                  $rootScope.$apply(\n                      function() {\n                          preloader.handleImageError( event.target.src );\n                          // Clean up object reference to help with the\n                          // garbage collection in the closure.\n                          preloader = image = event = null;\n                      }\n                  );\n              })\n              .attr( 'src', imageLocation )\n          ;\n      }\n  };\n  // Return the factory instance.\n  return( Preloader );\n};","(function () {\n\n  angular\n    .module('bdApp')\n    .controller('chooserCtrl', chooserCtrl)\n\t\n\t\tchooserCtrl.$inject = ['$scope', '$element','$timeout', '$window', 'jean', 'popups'];\n\n\t\t\n\t\tfunction chooserCtrl($scope, $element, $timeout, $window, jean, popups) {\n\t\n\t\t\tvar chvm = this;\n\t\t\t\n\t\t\t//popups\n\t\t\tchvm.popups = popups;\n\t\t\tchvm.jean = jean;\n\t\t\tchvm.breakPoint = 800;\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfunction scrollToLeft(el, scrollTo, scrollDuration) {\n\t\t\t\t//Select First Element\n\t\t\t\tel = el[0];\n\t\t\t\t//Center Scroll To\n\t\t\t\tscrollTo = scrollTo-(el.offsetWidth/2)+40;\n\t\t\t\t\n\t\t\t\tvar maxLeft = el.scrollWidth - el.offsetWidth;\n\t\t\t\t\n\t\t\t\tif (scrollTo >= maxLeft) scrollTo = maxLeft-1;\n\t\t\t\tif (scrollTo == maxLeft) scrollTo = maxLeft-1;\n\t\t\t\tvar stepNum = Math.ceil(scrollDuration / 15),\n\t\t\t\t\t\tdistance = scrollTo - el.scrollLeft,\n\t\t\t\t\t\tscrollStep = (distance / stepNum),\n\t\t\t\t\t\tscrollTest = (el.scrollLeft < scrollTo ? function(a,b){return a<=b-1;} : function(a,b){return a>=b+1;} );\t\t\n\t\t\t\t/*\n\n\t\t\t\tconsole.log(\"current Scoll pos: \"+el.scrollLeft);\n\t\t\t\tconsole.log(\"Scroll to \"+scrollTo);\n\t\t\t\tconsole.log(\"distance to go \"+distance);\n\t\t\t\tconsole.log(scrollStep);\n\t\t\t\tconsole.log(\"func: \"+scrollTest)\n\t\t\t\tconsole.log(\"eval\");\n\t\t\t\tconsole.log(scrollTest(el.scrollLeft, scrollTo ));\n\t\t\t\tconsole.log(\"done\");\n\t\t\t\t*/\n\t\t\t\t\t\t\n\t\t\t\tvar scrollInterval = setInterval(function(){    \n\t\t\t\t\n\t\t\t\t\tif(scrollTest(el.scrollLeft, scrollTo )){\n\t\t\t\t\t\tvar newScroll = el.scrollLeft+scrollStep;\n\t\t\t\t\t\tif (newScroll >= maxLeft) newScroll = maxLeft-1;\n\t\t\t\t\t\tel.scrollLeft = newScroll;\n\t\t\t\t\t\t\n\t\t\t\t\t\t/*\n\t\t\t\t\t\tconsole.log(newScroll);\n\t\t\t\t\t\tconsole.log(scrollTo);\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\telse clearInterval(scrollInterval); \n\t\t      \n\t  \t\t},15);\n\t\t\t  \n\t\t\t}\n\n\t\t\tchvm.selectorCoords = {\"top\":0, \"left\":0};\n\t\t\t\n\t\t\t\n\t\t\t//Center Selector on chooser change... Center on selected attr if edting preexisting jean...\n\t\t\t$scope.$watch('active', function(newValue,oldValue) {\t\n\t\t\t\t\n\t\t\t\t//Only on active choosers...\n\t\t\t\tif (newValue == true){\n\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar key = $scope.step.jeanKey+\"_\"+chvm.jean.data[$scope.step.jeanKey],\n\t\t\t\t\t\tactiveElement = angular.element(document.querySelector('#'+key));\n\t\t\t\t\t\t\n\t\t\t\t\t\tchvm.selectorCoords.top = activeElement.prop('offsetTop');\n\t\t\t\t\t\tchvm.selectorCoords.left = activeElement.prop('offsetLeft');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tvar selector = angular.element(document.querySelector(\"#\"+$scope.step.jeanKey+\"-selector\"));\n\t\t\t\t\t\tselector.css({'top':chvm.selectorCoords.top+'px', 'left':chvm.selectorCoords.left+'px'});\n\t\t\t\t\t\t\n\t\t\t\t\t\t//Mobile Choosers\n\t\t\t\t\t\tif ($window.innerWidth < chvm.breakPoint){\n\t\t\t\t\t\t\tvar chooser = angular.element($element[0].querySelector('.chooser-grid'));\t\n\t\t\t\t\t\t\tvar left = (chooser[0] ? chvm.selectorCoords.left-(chooser[0].offsetWidth/2)+40 : 0);\n\t\t\t\t\t\t\tchooser.prop('scrollLeft', left);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t//Desktop Choosers\n\t\t\t\t\t\telse{\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar chooser = angular.element($element[0]);\t\n\t\t\t\t\t\t\tchooser.prop('scrollTop', chvm.selectorCoords.top - 15);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}, 200);\n\t\t\t\t\t\n\t\t\t\t}\t\t\n\t\t\t\t\n    \t});\n\n\n\t\t\tchvm.selectAttr = function($event, id, attr, selector){\n\t\t\t\tvar chooser = angular.element(document.querySelector(\"#\"+attr+\"-chooser\"));\n\t\t\t\tvar selector = angular.element(document.querySelector(\"#\"+attr+\"-selector\"));\n\t\t\t\tvar top = angular.element($event.target).prop('offsetTop');\n\t\t\t\tvar left = angular.element($event.target).prop('offsetLeft');\n\t\t\t\tvar text = angular.element(document.querySelectorAll('#item-title'));\n\t\t\t\t\n\t\t\t\ttext.css({'right':'-400px', 'opacity':0});\n\t\t\t\tselector.css({'top':top+'px', 'left':left+'px'});\n\t\t\t\t\n\t\t\t\tchvm.selectorCoords = {\"top\":top,\"left\":left};\n\t\t\t\t\n\t\t\t\tif ($window.innerWidth < chvm.breakPoint) scrollToLeft(chooser, left, 200);\n\t\t\t\t\n\t\t\t\t$timeout(function(){\n\t\t\t\t\ttext.css({'right':'15px', 'opacity':1});\t\t\t\t\n\t\t\t\t\tchvm.jean.data[attr] =\tid;\t\n\t\t\t\t}, 200);\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchvm.jeanSet = function(attr, val){\n\t\t\t\tchvm.jean.data[attr] =\tval;\n\t\t\t}\n\t\t\n\t\t}\t\n\t\t\t\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('chooser', chooser);\n\t\t\n  function chooser () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/directives/choosers/chooser.template.html',\n      controller: 'chooserCtrl as chvm',\n      scope : {\n        step : '=',\n        dataset: '=',\n        active: '='\n      }\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('fabricChooser', ['$window', function($window) {\n    \t\n\t\t\treturn {\n\t    \t\n\t      restrict: 'EA',\n\t      template: '<div class=\"fabric-chooser-container\" ng-include=\"viewUrl\"></div>',\n\t      controller: 'chooserCtrl as chvm',\n\t      scope : {\n\t        step : '=',\n\t        dataset: '=',\n\t\t\t\t\tactive: '='\n\t      },\n\t      \n\t      link: function($scope){\n\t\t      \n\t\t      $scope.breakPoint = 800;\n\t\t      \n\t\t      //Template on window resize\n\t\t      $window.onresize = function() {\n\t          changeTemplate();\n\t          $scope.$apply();\n\t        };\n\t        \n\t        changeTemplate();\n\t            \n\t        function changeTemplate() {\n\t          var screenWidth = $window.innerWidth;\n\t          if (screenWidth < $scope.breakPoint) {\n\t            $scope.viewUrl = \"/directives/choosers/fabric-chooser.template-mobile.html\";\n\t          } else if (screenWidth >= $scope.breakPoint) {\n\t            $scope.viewUrl = \"/directives/choosers/fabric-chooser.template-desk.html\";\n\t          }\n\t        }\n\t\t      \n\t\t      \n\t\t      function positionChooser(){\n\t\t\t    \t//element.animate({scrollLeft: element.offset().left - 50}, \"slow\");\n\t\t\t    \t//var selector = angular.element(document.querySelector(\"#\"+attr+\"-selector\"));  \n\t\t      }\n\t\t      \n\t\t      \n\t\t      //Weight Filter\n\t\t      $scope.weightFilter = function(min, max){\n\t\t\t\t\t\treturn function(fabric){\n\t\t\t\t\t\t\tif (min && fabric.weight < min) return false;\n\t\t\t\t\t\t\tif (max && fabric.weight > max) return false;\n\t\t\t\t\t    return true;\n\t\t\t\t\t  }\n\t\t\t\t\t};\n\t      }\n\t      \n\t   };\n    \n    \n  }]);\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('genderChooser', genderChooser);\n\t\t\n  function genderChooser () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/directives/choosers/gender-chooser.template.html',\n      controller: 'chooserCtrl as chvm',\n      scope : {\n        step : '=',\n        dataset: '=',\n        active: '='\n      }\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('styleChooser', styleChooser);\n\t\t\n  function styleChooser () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/directives/choosers/style-chooser.template.html',\n      controller: 'chooserCtrl as chvm',\n      scope : {\n        step : '=',\n        dataset: '=',\n        active: '='\n      },\n      link: function($scope){\n\t      //Weight Filter\n\t      $scope.checkGenderFilter = function(gender){\n\t\t\t\t\treturn function(style){\n\t\t\t\t\t\treturn (style['images_'+gender] ? true:false);\n\t\t\t\t  }\n\t\t\t\t};\n\t    }\n     \n\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .controller('istackCtrl', istackCtrl);\n\n  istackCtrl.$inject = ['$window', '$scope', '$q', 'jean'];\n  \n  \n  \n  function istackCtrl($window, $scope, $q, jean) {\n\t  var isvm = this;\n\t\tisvm.jean = jean;\n\t\tisvm.centerPan = false;\t\t\n\t\tisvm.zoom = false;\n\t\tisvm.pan = {\"x\":50, \"y\":30};\n\t\tisvm.isMobile = function(){ return $window.innerWidth<800 };\n\t\t\n\t\t\n\t\tisvm.toggleZoom = function(){\n\t\t\tisvm.zoom = !isvm.zoom\n\t\t}\n\t\t\n\t\tisvm.touchEnd = function(){\n\t\t\tisvm.dragTracker = {\"x\":0,\"y\":0};\n\t\t\t$scope.$apply();\n\t\t}\n\t\t\n\t\tisvm.returnPan = function(){\n\t\t\tif (isvm.isMobile()) return false;\n\t\t\tisvm.pan = \"50% 30% 0\";\t\n\t\t\tisvm.centerPan = true;\n\t\t\timages = angular.element(document.querySelectorAll(\"#zoom-frame img\"));\n\t\t\tsetTimeout(function(){\n\t\t\t\timages.css({\"transform-origin\":isvm.pan});\n\t\t\t}, 200);\n\t\t}\n\t\t\t\t\n\t\tisvm.touchStart= function(e){\t\n\t\t\t//Setup Swipe starting point\n\t\t\tisvm.swipeStart={\"x\":e.touches[0].clientX,\"y\":e.touches[0].clientY};\n\t\t\t//Clear out Swipe Object\n\t\t\tisvm.swipe={};\n\t\t}\n\t\t\n\t\tisvm.zoomDrag = {\"x\":0,\"y\":0};\n\t  isvm.dragTracker = {\"x\":0,\"y\":0};\n\t\t\n\t\tisvm.touchMove= function(e){\n\t\t\t\n\t\t\tvar images = angular.element(document.querySelectorAll(\"#zoom-frame img\"));\n\t\t\t//Only Drag on mobile\n\t\t\tif (!isvm.isMobile()) return false;\n\t\t\t//Only run function if we're zoomed in\n\t\t\tif (!isvm.zoom) return false;\n\t\t\t//Prevent Scrolling?\n\t\t\te.preventDefault();\n\t\t\t\n\n\t\t\tvar touch = e.touches[0],\n\t\t\ttarget = touch.target,\n\t\t\tdrag = {\n\t\t\t\t\"x\" : touch.clientX-isvm.swipeStart.x,\n\t\t\t\t\"y\" : touch.clientY-isvm.swipeStart.y\n\t\t\t};\n\t\t\t\n\t\t\t//Subtract previous returns of this drag length to get the amount dragged since last return\t\n\t\t\tvar x = drag.x-isvm.dragTracker.x,\n\t\t\ty = drag.y-isvm.dragTracker.y;\n\t\t\n\t\t\t//Get drag % of container for Transform Origin Only \n\t\t\tvar x = (x/target.clientWidth*100)+isvm.zoomDrag.x,      \n\t\t\ty = (y/target.clientHeight*100)+isvm.zoomDrag.y;\n\n\t\t\t//Set up max bounds\n\t\t\tvar bounds={\"y\":{},\"x\":{}}; \n\t\t\tbounds.y.top    = 60;\n\t\t\tbounds.y.bottom = -90;\n\t\t\tbounds.x.left   = -120;\n\t\t\tbounds.x.right  = 90;\n\t\t\t\n\t\t\t//Apply Bounds\t\n\t\t\tif (y>bounds.y.top) y = bounds.y.top;\n\t\t\tif (y<bounds.y.bottom) y = bounds.y.bottom;\n\t\t\tif (x<bounds.x.left) x = bounds.x.left;\n\t\t\tif (x>bounds.x.right) x = bounds.x.right;\n\t\t\t\n\t\t\t//Build Move Objext\t\t\n\t\t\tvar move = {\"x\":x,\"y\":y};\n\t\t\tisvm.zoomDrag = move;\t \t       \n\t        \n\t\t\t//Alter transform origin\n\t\t\tvar pan = -x + \"% \" + -y + \"% 0\";\n\t\t\timages.css({\"transform-origin\":pan});\n\n\t\t\tisvm.dragTracker = drag;\t\n\t\t\t$scope.$apply();\n\n\t\t}\n\t\t\n\n\n\n\t\tisvm.dragPan = function(u, event) {\n\t\t\n\t\t\tconsole.log(event.direction);\n\t\t\t\n\t\t\t\n\t\t\t//Only Drag on mobile\n\t\t\tif (!isvm.isMobile()) return false;\n\t\t\t\n\t\t\t//Only run function if we're zoomed in\n\t\t\tif (!isvm.zoom) return false;\n\t\t\t\n\t\t\tvar images = angular.element(document.querySelectorAll(\"#zoom-frame img\")),\n\t\t\twindowHeight = window.innerHeight,\n\t\t\torigHeight = images[0].height,\n\t\t\tnewHeight = origHeight*1.7,\n\t\t\tframe={\n\t\t\t\t\"width\":event.target.clientWidth,\n\t\t\t\t\"height\":event.target.clientHeight\n\t\t\t};\n\t\t\t\n\n\t\t\t//Get drag length\n\t\t\tvar drag = {\n\t\t\t\t\"x\" : event.deltaX,\n\t\t\t\t\"y\" : event.deltaY\n\t\t\t}\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t//Subtract previous returns of this drag length to get the amount dragged since last return\t\n\t\t\tvar x = drag.x-isvm.dragTracker.x,\n\t\t\ty = drag.y-isvm.dragTracker.y;\n\n\t\t\tconsole.log(x,y);\n\t\t\t\n\t\t\t//Get drag % of container for Transform Origin Only \n\t\t\tvar x = Math.abs(x)/frame.width*100;      \n\t\t\tx = (drag.x<0)?-x:x;\t       \n\t\t\tvar y = Math.abs(y)/frame.height*100;\n\t\t\ty = (drag.y<0)?-y:y;\n\t\t\t\n\t\t\t//Add these values to the last drag. This essentially allows drag and drop\n\t\t\tx=x+isvm.zoomDrag.x;\n\t\t\ty=y+isvm.zoomDrag.y;\n\t\t\t\t \n\t\t\t//Set up max bounds\n\t\t\tvar bounds={\"y\":{},\"x\":{}}; \n\n\t\t\t/*//Left/Right Bounds\n\t\t\tbounds.y.top =(newHeight/2)+175;\n\t\t\tbounds.y.bottom =-(newHeight*.225);\n\t\t\tbounds.x.left = -(event.target.clientWidth-(event.target.clientWidth*.05));\n\t\t\tbounds.x.right = event.target.clientWidth-(event.target.clientWidth*.05);*/\n\t\t\t\t\n\t\t\t//Transform Origin Bounds\n\t\t\tbounds.y.top    = 60;\n\t\t\tbounds.y.bottom = -90;\n\t\t\tbounds.x.left   = -150;\n\t\t\tbounds.x.right  = 60;\n\t\t\t\t\n\t\t\tif (y>bounds.y.top) y = bounds.y.top;\n\t\t\tif (y<bounds.y.bottom) y = bounds.y.bottom;\n\t\t\tif (x<bounds.x.left) x = bounds.x.left;\n\t\t\tif (x>bounds.x.right) x = bounds.x.right;\n\t\t\t\n\t\t\t//Build Move Objext\t\t\n\t\t\tvar move = {\"x\":x,\"y\":y}\n\t\t\t\n\t\t\tconsole.log(move);\n\t\t\t//Register Drag\n\t\t\tisvm.zoomDrag = move;\t \t       \n\t        \n\t       \n\t\t\t//Alter transform origin\n\t\t\tvar pan = -x + \"% \" + -y + \"% 0\";\n\t\t\timages.css({\"transform-origin\":pan});\n\n\t\t\t/*//Alter Left/Bottom\n\t\t\timages.css('left', move.x+\"px\");\n\t\t\timages.css('bottom', -move.y+\"px\");*/\n\t\t\t\n\t\t\t//When drag is over, reset drag tracker\t \n\t\t\tisvm.dragTracker = event.isFinal ? {\"x\":0,\"y\":0} : drag;\n\t\t\t\t \n\n\t\t}\n\t\t\n\n\t\t\n\n\t\t\n\n\t\tisvm.scanImage = function(x,y){\n\n\t\t\tsetTimeout(function(){\n\t\t\t\tisvm.centerPan = false;\n\t\t\t}, 200);\n\t\t\t\n\t\t\t\n\t\t\tframe = angular.element(document.querySelector(\"#zoom-frame\"))[0];\n\t\t\tfWidth = frame.clientWidth;\n\t\t\tfHeight = frame.clientHeight;\n\t\t\trect = frame.getBoundingClientRect();\n\t\t\trootDoc = frame.ownerDocument.documentElement;\n\t\t\t\t//calculate the offset of the frame from the top and left of the document\n\t\t\toffsetT = rect.top + $window.pageYOffset - rootDoc.clientTop\n\t\t\toffsetL = rect.left + $window.pageXOffset - rootDoc.clientLeft\n\n\t\t\t//calculate current cursor position inside the frame, as a percentage\n\t\t\txPosition = ((x - offsetL) / fWidth) * 100\n\t\t\tyPosition = ((y - offsetT) / fHeight) * 100\n\t\t\t\n\t\t\t\n\t\t\t/*\n\t\t\tconsole.log(x,y);\n\t\t\tconsole.log(fWidth);\n\t\t\tconsole.log(offsetL);\n\t\t\tconsole.log(x-offsetL);\n\t\t\tconsole.log(xPosition, yPosition);\n\t\t\t*/\n\t\t\tif ($window.innerWidth < isvm.breakPoint) pan = (100-xPosition) + \"% \" + (100-yPosition) + \"% 0\";\n\t\t\telse pan = (xPosition) + \"% \" + (yPosition) + \"% 0\";\n\t\t\tisvm.pan=pan;\n\t\t\timages = angular.element(document.querySelectorAll(\"#zoom-frame img\"));\n\t\t\timages.css({\"transform-origin\":pan});\n\t\t}\n\t\t\n\t\tisvm.trackMouse = function($event){\n\t\t\t//if (isvm.isMobile()) return false;\n\t\t\tisvm.scanImage($event.pageX,$event.pageY);\n\t\t}\n\n\t\t\t\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('imageStack', imageStack);\n\t\t\n\n\t\n  function imageStack () {\n    return {\n      restrict: 'AE',\n      templateUrl: '/directives/image-stack/image-stack.template.html',\n      controller: 'istackCtrl as isvm',\n      link: function(scope, ele, attrs, ctrl) {\n\t      \n\t      \n\t     ele.on('touchstart', function(e){\n\t\t\t \tscope.isvm.touchStart(e);\t\n\t     });\t\n\t     \n\t     ele.on('touchmove', function(e){\n\t\t\t \tscope.isvm.touchMove(e);\t\n\t     });\t\t\n\t     \n\t     ele.on('touchend', function(e){\n\t\t\t \tscope.isvm.touchEnd(e);\t\n\t     });\t\t\t\t\n\t\t\t\n       \n\t      /*\n\t      $swipe.bind(ele, {\n          'move': function(event) {\n\t\t\t\t\t\tscope.isvm.scanImage(coords.x,coords.y);\n          }\n\t      });\n\t     */\n\n\t    }\n    };\n    \n  }\n  \n    \n  \n  \n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('jeanList', [function() {\n    \t\n\t\t\treturn {\n\t    \t\n\t      restrict: 'EA',\n\t\t\t\ttemplateUrl: '/directives/jean-list/jean-list.template.html',\n\t      scope : {\n\t        jean : '='\n\t      },\n\t      \n\t      link: function($scope){\n\t\t\t\t\n\t      }\n\t      \n\t   };\n    \n    \n  }]);\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .controller('navigationCtrl', navigationCtrl);\n\n  navigationCtrl.$inject = ['$location','$route','popups', 'aws'];\n  function navigationCtrl($location, $route, popups, aws) {\n    var vm = this;\n\t\t\n\n\t\tvm.isLoggedIn = null;\n\t\taws.getCurrentUserFromLocalStorage().then(\n\t\t\tfunction(result){\n\t\t\t\tif (result.accessToken != \"\") vm.isLoggedIn = true;\n\t\t\t},\n\t\t\tfunction(err){\n\t\t\t\tconsole.log(err);\n\t\t\t\tvm.isLoggedIn = false;\n\t\t\t}\n\t\t);\n\t\t\n\t\t\n\t\t//vm.isAdmin = accountManagement.isAdmin();\n    //vm.currentUser = accountManagement.currentUser();\n\t\t\n\t\tvm.drops={};\n\t\tvm.drops.acct=false;\n\t\tvm.mobileMenu = false;\n\t\t\n\t\tvm.logout = function(){\n\t\t\taws.signCurrentUserOut();\n\t\t\tif ($location.path() == \"/\")\n\t\t\t\t$route.reload();\n\t\t}\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('navigation', navigation);\n\n  function navigation () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/directives/navigation/navigation.template.html',\n      controller: 'navigationCtrl as navvm'\n    };\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .controller('sliderCtrl', sliderCtrl)\n\t\n\t\tsliderCtrl.$inject = ['$scope', 'preloader'];\n\n\t\tfunction sliderCtrl($scope, preloader) {\n\t\t\tvar slvm = this;\n\n\t\t\t\n\t\t\t$scope.imagesLoaded = false;\n\t\t\t\n\t\t\tpreloader.preloadImages( $scope.slides )\n\t\t\t.then(function() {\n\t\t\t\t$scope.imagesLoaded = true;\n\t\t\t},\n\t\t\tfunction() {\n\t\t\t\tconsole.log(\"error loading imgaes...\");\n\t\t\t});\n\t\t \t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t$scope.currentIndex = 0;\n\t\t\t\n\t\t\t$scope.setCurrentSlideIndex = function (index) {\n\t\t\t  $scope.currentIndex = index;\n\t\t\t};\n\t\t\t\n\t\t\t$scope.isCurrentSlideIndex = function (index) {\n\t\t\t  return $scope.currentIndex === index;\n\t\t\t};\n\t\t\t\n\t\t\t$scope.nextSlide = function () {\n\t\t\t  $scope.currentIndex = ($scope.currentIndex < $scope.slides.length - 1) ? ++$scope.currentIndex : 0;\n\t\t\t};\n\t\t\t\n\t\t\t$scope.prevSlide = function () {\n\t\t\t  $scope.currentIndex = ($scope.currentIndex > 0) ? --$scope.currentIndex : $scope.slides.length - 1;\n\t\t\t};\n\t\t\t\t\n\t\t}\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .directive('slider', slider);\n\t\t\n  function slider () {\n    return {\n      restrict: 'EA',\n      templateUrl: '/directives/slider/slider.template.html',\n      controller: 'sliderCtrl as slvm',\n      scope : {\n        slides : '=',\n        imageClick : '&'\n      }\n    };\n  }\n\n})();","(function() {\n  \n  angular\n    .module('bdApp')\n    .controller('adminCtrl', adminCtrl);\n\n  adminCtrl.$inject = ['$location', 'meanData'];\n  function adminCtrl($location, meanData) {\n\t  \n\t  \n    var vm = this;\n\n    vm.user = {};\n    meanData.getOptions()\n      .success(function(data) {\n\t      console.log(\"admin.controller.jsln16:::\");\n        console.log(data);\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n\n})();","(function() {\n  \n  angular\n    .module('bdApp')\n    .controller('closetCtrl', closetCtrl);\n\n  closetCtrl.$inject = ['$location', 'jean', 'meanData','popups', '$filter'];\n  function closetCtrl($location, jean, meanData, popups, $filter) {\n    var vm = this;\n\t\tvm.popups=popups;\n    vm.user = {};\n\t\tvm.jeans = [];\n\t\tvm.jean={};\n\t\tvm.data={};\n\t\t\n\t\tvm.jean=jean;\n\t\t\n\t\t//Set up customizer data...\n\t\tvm.setupData = function (func, dataKey) {\n\t\t  meanData[func]()\n\t\t   .success(function(data) {\n        vm.data[dataKey] = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n\t\t}\n\n\t\tvm.setupData('getGenders', 'genders'),\n\t\tvm.setupData('getStyles', 'styles'),\n\t\tvm.setupData('getFabrics', 'fabrics'),\n\t\tvm.setupData('getThreads', 'threads'),\n\n\n\n\n\t\tvm.dataLookup = function(jeanKey, id, attr){\n\n\t\t\tif (typeof jeanKey == 'undefined' || typeof id == 'undefined') return false;\n\t\t\tattr = attr||null;\n\t\t\t\n\t\t\tvar dataKey = (jeanKey.includes(\"thread\") ? \"threads\" : jeanKey+\"s\");\n\t\t\t\n\t\t\tvar dataSet = vm.data[dataKey];\n\t\t\tselected = $filter('filter')(dataSet, {id: id})[0];\n\t\t\tif (!attr) return selected;\n\t\t\telse return selected[attr];\t\n\t\t}\n\t\t\n\t\tvm.copyJean = function(){\n\t\t\tvm.jean = jean.createNew(vm.jean);\n\t\t\t$location.path('/customizer');\n\t\t}\n\t\t\n\t\tvm.selectJean = function(jean){\n\t\t\tconsole.log(jean);\n\t\t\tconsole.log(vm.jean);\n\t\t\tvm.popups.jeanProfile = true; \n\t\t\tvm.jean.data=jean\n\t\t}\n\t\t\n\t\tmeanData.getJeansByUser(1)\n\t\t  .success(function(data) {\n\t\t\t\tfor (x=0; x<data.length; x++){\n\t\t\t\t\tvm.jeans.push(data[x]);\n\t\t\t\t}\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n      \n    meanData.getProfile()\n      .success(function(data) {\n        vm.user = data;\n      })\n      .error(function (e) {\n        console.log(e);\n      });\n  }\n  \n\n\n\n})();","(function() {\n  \n  angular\n    .module('bdApp')\n    .controller('customizerCtrl', customizerCtrl);\n\n  customizerCtrl.$inject = ['$q','$filter','$timeout','$location', '$window', '$routeParams', 'meanData', 'jean', '$scope', 'popups'];\n  function customizerCtrl($q, $filter, $timeout, $location, $window, $routeParams, meanData, jean, $scope, popups) {\n    var vm = this;\n\t\t\n\n\t\t//Detect Orientation\t\t\n\t\tfunction landscapeDetect() {\n\t\t  var ua = navigator.userAgent.toLowerCase();\n\t\t  var isAndroid = ua.indexOf(\"android\") > -1; // Detect Android devices\n\t\t  if (isAndroid) {\n\t\t    //window.orientation is different for iOS and Android\n\t\t    if (window.orientation == 0 || window.orientation == 180) { //Landscape Mode\n\t\t      return true;\n\t\t    }\n\t\t    else if (window.orientation == 90 || window.orientation == -90) { //Portrait Mode\n\t\t\t\t\treturn false;\n\t\t    }\n\t\t  }\n\t\t  else {\n\t\t    if (window.orientation == 90 || window.orientation == -90) { //Landscape Mode\n\t\t      return true;\n\t\t    }\n\t\t    else if (window.orientation == 0 || window.orientation == 180) { //Portrait Mode\n\t\t      return false;\n\t\t    }\n\t\t  }\n\t\t}\n    \n    vm.landscape=landscapeDetect();\n  \tvar supportsOrientationChange = \"onorientationchange\" in window,\n    orientationEvent = supportsOrientationChange ? \"orientationchange\" : \"resize\";\n\t\t\n\t\twindow.addEventListener(orientationEvent, function() {\t\n\t\t\t//Set a scope variable on orientation change. This will display a popup on the front end warning users that the customizer works best in protrait mode\n\t\t  vm.landscape=landscapeDetect();\n\t\t  $scope.$apply();\n\t\t}, false);\n\t\t\n\t\t\n\t\t//popups\n\t\tvm.popups = popups;\n\t\t\n\t\n\n\t\t//Set up jean data from parameter\n\t\tif ($routeParams.jean_id && $routeParams.action=='copy'){\n\t\t\t//Copy Jean\n\t\t\tjean.createNew($routeParams.jean_id);\n\t\t\t\n\t\t}else if ($routeParams.jean_id && !$routeParams.action){\n\t\t\t//Edit Jean\n\t\t\tmeanData.getJeanById($routeParams.jean_id, function(data){\n\t\t\t\tjean.data=data;\n\t\t\t});\n\t\t\t\n\t\t}else{\n\t\t\t//New Jean\n\t\t\tif(Object.keys(jean.data).length === 0 && jean.data.constructor === Object){\n\t\t\t\tjean.createNew();\n\t\t\t}\t\t\t\n\t\t}\n\t\t\n\t\tvm.jean=jean;\n\t\t\n\t\n    /*\n\t  vm.jean.selectStyle = function(id){\n\t    vm.jean.data.style =\tid;\t   \n\t    //vm.form.nextStep();\n    }    \n\t\t*/\n\n\t\t\n\t\t//Build Control Panel Steps\n\t\tvm.panel = [];\n\t\t\n\t\t//Gender\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"gender-chooser\",\n\t\t\t\"dataKey\":\"genders\",\n\t\t\t\"title\":\"Gender\",\n\t\t\t\"jeanKey\":\"gender\"\n\t\t});\n\t\t\n\t\t//Style\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"style-chooser\",\n\t\t\t\"dataKey\":\"styles\",\n\t\t\t\"title\":\"Style\",\n\t\t\t\"jeanKey\":\"style\"\n\t\t});\n\t\t\n\t\t//Fabric\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"fabric-chooser\",\n\t\t\t\"dataKey\":\"fabrics\",\n\t\t\t\"title\":\"Fabric\",\n\t\t\t\"jeanKey\":\"fabric\"\n\t\t});\n\t\t\n\t\t//Top Thread\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"chooser\",\n\t\t\t\"dataKey\":\"threads\",\n\t\t\t\"title\":\"Top Thread\",\n\t\t\t\"jeanKey\":\"top_thread\"\n\t\t});\n\t\t\n\t\t//Bottom Thread\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"chooser\",\n\t\t\t\"dataKey\":\"threads\",\n\t\t\t\"title\":\"Bottom Thread\",\n\t\t\t\"jeanKey\":\"bottom_thread\"\n\t\t});\n\t\t\n\t\t//Accent Thread\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"chooser\",\n\t\t\t\"dataKey\":\"threads\",\n\t\t\t\"title\":\"Accent Thread\",\n\t\t\t\"jeanKey\":\"accent_thread\"\n\t\t});\n\t\t\n\t\t//Overview\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"list\",\n\t\t\t\"title\":\"Overview\"\n\t\t});\n\t\t\n\t\t\n\t\t/*\n\t\tNot using hardware for now...\n\n\t\tvm.panel.push({\n\t\t\t\"panelTemplate\":\"chooser\",\n\t\t\t\"dataKey\":\"hardware\",\n\t\t\t\"title\":\"Hardware\",\n\t\t\t\"jeanKey\":\"hardware\"\n\t\t});\n\t\t*/\n\t\t\n\t\tvm.panelDir=\"next\";\t\t\n\t\tvm.panelStep = 0;\n\t\tvm.changeStep = function(step){\n\t\t\tif (step >= vm.panel.length) return false;\n\t\t\tif (step < 0) return false;\n\t\t\tif (step===undefined) return false;\n\t\t\telse vm.panelStep = step; \n\t\t\t\n\t\t\t//As long as we're not on the \"Overview\" Step, update active item...\n\t\t\tif (step+1 != vm.panel.length) vm.updateActiveItem();\n\t\t}\n\t\t\n\t\tvm.activeItem={};\n\t\t\n\t\tvm.updateActiveItem = function(){\n\t\t\tvar data = vm.data[vm.panel[vm.panelStep].dataKey];\n\t\t\tvar key = vm.jean.data[vm.panel[vm.panelStep].jeanKey];\n\t\t\tvar ret = $filter('filter')(data, {id: key})[0];\n\t\t\tvm.activeItem = ret;\n\t\t}\n\t\t\n\t\tvm.styleByGender = function(gender){\n\t\t\treturn function(style){\n\t\t\t\treturn style[\"images_\"+gender];\n\t\t  }\n\t\t};\n\t\t\n\t\t\t\t\n\t\tvm.dataLookup = function(jeanKey, id, attr){\n\t\t\t\n\t\t\tif (typeof jeanKey == 'undefined' || typeof id == 'undefined') return false;\n\t\t\tattr = attr||null;\n\t\t\t\n\t\t\tvar dataInfo = $filter('filter')(vm.panel, {jeanKey: jeanKey});\n\n\t\t\tif (dataInfo.length < 1) return false; //Return false for the \"List\" Panel\n\t\t\t\n\t\t//\tconsole.log(dataKey);\n\t\t\t\n\t\t\tvar dataKey = (jeanKey == \"gender\" || jeanKey == \"style\" ? jeanKey+\"s\" : $filter('filter')(vm.panel, {jeanKey: jeanKey})[0].dataKey);\n\t\t\tvar dataSet = vm.data[dataKey];\n\n\t\t\tdataById = \t$filter('filter')(dataSet, {id: id});\n\t\t\tif (typeof dataById == 'undefined') return false; //Return false when dataSet is undefined...\n\t\t\tselected = dataById[0];\n\t\t\t\n\t\t\tconsole.log(selected);\n\t\t\tif (!attr) return selected;\n\t\t\telse return selected[attr];\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\t\t\n\t\t/* GET CUSTOMIZER DATA */\n\t\tvm.data = {};\n\t\t\t\n\t\tvm.getData = function (func, dataKey) {\n\t\t\tvar d = $q.defer();\t   \n\t\t  meanData[func]()\n\t\t  .then(function(res){\n\t\t    vm.data[dataKey]=res.data;\n\t\t    d.resolve(true);\n\t\t\t});\n\t\t\treturn d.promise;\n\t\t}\n\t\t\n\t\t//Make sure that all data is in place before running updateActiveItem\n\t\t$q.all([\n\t\t\tvm.getData('getGenders', 'genders'),\n\t\t\tvm.getData('getStyles', 'styles'),\n\t\t\tvm.getData('getFabrics', 'fabrics'),\n\t\t\tvm.getData('getThreads', 'threads'),\n\t\t]).then(function(data) {\n\t\t\n\t\t\t//Update the active item any time the jean data changes\n\t\t\t$scope.$watch(function() {\n\t\t\t  return vm.jean.data;\n\t\t\t}, function(current, original) {\n\t\t\t\tvm.updateActiveItem();\n\t\t\t}, true);\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t\tvm.createThumb = function(){\n\t  \tvar canvas = document.createElement('canvas');\n\t  \tcanvas.width=600;\n\t  \tcanvas.height=600;\n\t  \t\n\t  \tvar cntxt = canvas.getContext('2d');\t\n\t  \tvar promises = [];\n\t\t\t\n\t    function loadImage(src) {\n        return $q(function(resolve,reject) {\n          var image = new Image();\n          image.src = src;\n          image.onload = function() {\n            cntxt.drawImage(image,0,0,600,696);\n            resolve(image);\n          };\n          image.onerror = function(e) {\n            reject(e);\n          };\n        })\n\t    }\n\t    \n\t    var imagesElements = document.getElementsByClassName(\"zoomed-image\");\n\t    for(var i=0; i<imagesElements.length; i++){\n\t\t    var image = imagesElements[i];\t\n\t      promises.push(loadImage(image.src));\n\t    }\n\n\t    return $q.all(promises).then(function(results) {\n\t      var dataUrl = canvas.toDataURL('image/jpeg');\n\t      window.open(dataUrl);\n\t    });\n\t\t\t\n  \t}\n\n\t\t\n  }\n\n})();","(function() {\n  \n  angular\n    .module('bdApp')\n    .controller('homeCtrl', homeCtrl);\n\t\t\t\n\t\thomeCtrl.$inject = ['$scope','jean', '$animate'];\n\n\t\t\n    function homeCtrl ($scope, jean, $animate) {\n\t    \t    \t    \n\t    $scope.jean = jean.data;\n\t    \t\n    }\n\n})();","(function () {\n\n  angular\n  .module('bdApp')\n  .controller('loginCtrl', loginCtrl);\n\n  loginCtrl.$inject = ['$location', 'aws'];\n  function loginCtrl($location, aws) {\n    var vm = this;\n\t\t\n\t\tvm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\t  \n\t  vm.messages = {\n\t\t\tmessage : \"\",\n\t\t\ttype: \"\",\n\t\t\tset: function(message, type){\n\t\t\t\tvm.messages.message = message;\n\t\t\t\tvm.messages.type = type;\n\t\t\t},\n\t\t\treset:function(){\n\t\t\t\tvm.messages.message = \"\";\n\t\t\t\tvm.messages.type = \"\";\n\t\t\t}\n\t\t}\n\t\t\n\n\t\t//aws.getCurrentUserFromLocalStorage();\n\t\t\n\t\tvm.login = function(email, password){\n\t\t\taws.authenticateCognitoUser(email,password).then(\n\t\t\t\tfunction(result){\n\t\t\t\t\t$location.path('/closet');\n\t\t\t\t},\n\t\t\t\tfunction(err){\n\t\t\t\t\tvm.messages.set(err.message,\"error\");\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\n    vm.onSubmit = function () {\n\t    vm.errors.message = \"\";\n      authentication\n        .login(vm.credentials)\n        .error(function(err){\n          console.log(err);\n          vm.errors.message = err.message;\n        })\n        .then(function(){\n          $location.path('closet');\n        });\n    };\n    \n        /*\n\t    \n\t     aws.checkUserForConfirmation(vm.credentials.email);\n\t\t\t      //Check to see if user is already confirmed\n\t\t\t      \n\t\t\t      vm.setMessage(\"We already have an unconfirmed user associated with this email address. Please check your email for the confirmation code or use the link above to resend.\", \"warning\");\n\t\t\t      vm.formStep = 2;\n\t\t\t      \n\t\t\t      vm.setMessage(err.message, \"error\");\n\t\t      }else{\n\t\t\t      \n\t\t\t      */\n\n  }\n\n})();","(function () {\n\n  angular\n    .module('bdApp')\n    .controller('registerCtrl', registerCtrl);\n\n  registerCtrl.$inject = ['$location', 'aws', '$sce'];\n  function registerCtrl($location, aws, $sce) {\n    var vm = this;\n\n    vm.credentials = {\n      name : \"\",\n      email : \"\",\n      password : \"\"\n    };\n\t\n\t\tvm.formStep = 1;\n\t    \n    vm.messages = {\n\t\t\tmessage : \"\",\n\t\t\ttype: \"\",\n\t\t\tset: function(message, type){\n\t\t\t\tvm.messages.message = message;\n\t\t\t\tvm.messages.type = type;\n\t\t\t},\n\t\t\treset: function(){\n\t\t\t\tvm.messages.message = \"\";\n\t\t\t\tvm.messages.type = \"\";\n\t\t\t}\n\t\t}\n\t\t\n\t\tvm.setMessage = function(message, type){\n\t\t\tvm.messages.message = message;\n\t\t\tvm.messages.type = type;\n\t\t}\n\t\t\n\t\tvm.resetMessage = function(){\n\t\t\tvm.messages.message = \"\";\n\t\t\tvm.messages.type = \"\";\n\t\t}\n\t\t\n\t\t\n\t\t//Register User\n    vm.registerUser = function () {\n\t    vm.messages.reset();\n      aws.signupForApplication(vm.credentials.email, vm.credentials.password).then(\n      \tfunction(){\n\t\t\t\t\tvm.formStep = 2;\t      \t\n\t      },   \n\t      function(err){\n\t\t\t    vm.messages.set(err.message, \"error\");\n\t\t    }\n\t\t  );\n    };\n    \t\t\t\t\t\n\t\t//Confirm User with Registration Code\t\t\t\t\n    vm.confirmUser = function() {\n\t\t\tvm.resetMessage();\n\t\t\taws.confirmRegisteredUnauthenticatedUser(vm.credentials.email, vm.credentials.code).then(\n      \tfunction(result){\n\t\t\t\t\tvm.setMessage($sce.trustAsHtml(\"Your Account has been confirmed. <a href='/login'>Click here to login</a>\"), \"success\");\n\t      },   \n\t      function(err){\n\t\t\t    vm.setMessage(err.message, \"error\");\n\t\t    }\n\t\t  );\n    };\n    \n    //Resend Registration code to user via email\n    vm.resendCode = function(){\n\t    //This function throws an error in the SDK and no result... cannot implement promise for now\n\t    aws.resendConfirmationCode(vm.credentials.email);\n\t    //We're going to show a success message no matter what\n\t    //TODO: Implement corrected SDK and promise structure for this functino\n\t    vm.setMessage(\"A new confirmation code has been sent to \"+vm.credentials.email+\". Enter the code above to confirm your account\", \"success\");\n    };\n\n  }\n\n})();","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['superagent'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('superagent'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.ApiClient = factory(root.superagent);\n  }\n}(this, function(superagent) {\n  'use strict';\n\n  /**\n   * @module ApiClient\n   * @version 1.0.0\n   */\n\n  /**\n   * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n   * application to use this class directly - the *Api and model classes provide the public API for the service. The\n   * contents of this file should be regarded as internal but are documented for completeness.\n   * @alias module:ApiClient\n   * @class\n   */\n  var exports = function() {\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://kd6f1omjzc.execute-api.us-east-1.amazonaws.com/development\n     */\n    this.basePath = 'https://kd6f1omjzc.execute-api.us-east-1.amazonaws.com/development'.replace(/\\/+$/, '');\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      'blue-delta-userPool-authorizer': {type: 'apiKey', 'in': 'header', name: 'Authorization'},\n      'sigv4': {type: 'apiKey', 'in': 'header', name: 'Authorization'}\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n\n    /**\n     * If set to false an additional timestamp parameter is added to all API GET calls to\n     * prevent browser caching\n     * @type {Boolean}\n     * @default true\n     */\n    this.cache = true;\n  };\n\n  /**\n   * Returns a string representation for an actual parameter.\n   * @param param The actual parameter.\n   * @returns {String} The string representation of <code>param</code>.\n   */\n  exports.prototype.paramToString = function(param) {\n    if (param == undefined || param == null) {\n      return '';\n    }\n    if (param instanceof Date) {\n      return param.toJSON();\n    }\n    return param.toString();\n  };\n\n  /**\n   * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n   * NOTE: query parameters are not handled here.\n   * @param {String} path The path to append to the base URL.\n   * @param {Object} pathParams The parameter values to append.\n   * @returns {String} The encoded path with parameter values substituted.\n   */\n  exports.prototype.buildUrl = function(path, pathParams) {\n    if (!path.match(/^\\//)) {\n      path = '/' + path;\n    }\n    var url = this.basePath + path;\n    var _this = this;\n    url = url.replace(/\\{([\\w-]+)\\}/g, function(fullMatch, key) {\n      var value;\n      if (pathParams.hasOwnProperty(key)) {\n        value = _this.paramToString(pathParams[key]);\n      } else {\n        value = fullMatch;\n      }\n      return encodeURIComponent(value);\n    });\n    return url;\n  };\n\n  /**\n   * Checks whether the given content type represents JSON.<br>\n   * JSON content type examples:<br>\n   * <ul>\n   * <li>application/json</li>\n   * <li>application/json; charset=UTF8</li>\n   * <li>APPLICATION/JSON</li>\n   * </ul>\n   * @param {String} contentType The MIME content type to check.\n   * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n   */\n  exports.prototype.isJsonMime = function(contentType) {\n    return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n  };\n\n  /**\n   * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n   * @param {Array.<String>} contentTypes\n   * @returns {String} The chosen content type, preferring JSON.\n   */\n  exports.prototype.jsonPreferredMime = function(contentTypes) {\n    for (var i = 0; i < contentTypes.length; i++) {\n      if (this.isJsonMime(contentTypes[i])) {\n        return contentTypes[i];\n      }\n    }\n    return contentTypes[0];\n  };\n\n  /**\n   * Checks whether the given parameter value represents file-like content.\n   * @param param The parameter to check.\n   * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n   */\n  exports.prototype.isFileParam = function(param) {\n    // fs.ReadStream in Node.js (but not in runtime like browserify)\n    if (typeof window === 'undefined' &&\n        typeof require === 'function' &&\n        require('fs') &&\n        param instanceof require('fs').ReadStream) {\n      return true;\n    }\n    // Buffer in Node.js\n    if (typeof Buffer === 'function' && param instanceof Buffer) {\n      return true;\n    }\n    // Blob in browser\n    if (typeof Blob === 'function' && param instanceof Blob) {\n      return true;\n    }\n    // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n    if (typeof File === 'function' && param instanceof File) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Normalizes parameter values:\n   * <ul>\n   * <li>remove nils</li>\n   * <li>keep files and arrays</li>\n   * <li>format to string with `paramToString` for other cases</li>\n   * </ul>\n   * @param {Object.<String, Object>} params The parameters as object properties.\n   * @returns {Object.<String, Object>} normalized parameters.\n   */\n  exports.prototype.normalizeParams = function(params) {\n    var newParams = {};\n    for (var key in params) {\n      if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n        var value = params[key];\n        if (this.isFileParam(value) || Array.isArray(value)) {\n          newParams[key] = value;\n        } else {\n          newParams[key] = this.paramToString(value);\n        }\n      }\n    }\n    return newParams;\n  };\n\n  /**\n   * Enumeration of collection format separator strategies.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CollectionFormatEnum = {\n    /**\n     * Comma-separated values. Value: <code>csv</code>\n     * @const\n     */\n    CSV: ',',\n    /**\n     * Space-separated values. Value: <code>ssv</code>\n     * @const\n     */\n    SSV: ' ',\n    /**\n     * Tab-separated values. Value: <code>tsv</code>\n     * @const\n     */\n    TSV: '\\t',\n    /**\n     * Pipe(|)-separated values. Value: <code>pipes</code>\n     * @const\n     */\n    PIPES: '|',\n    /**\n     * Native array. Value: <code>multi</code>\n     * @const\n     */\n    MULTI: 'multi'\n  };\n\n  /**\n   * Builds a string representation of an array-type actual parameter, according to the given collection format.\n   * @param {Array} param An array parameter.\n   * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n   * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n   * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n   */\n  exports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {\n    if (param == null) {\n      return null;\n    }\n    switch (collectionFormat) {\n      case 'csv':\n        return param.map(this.paramToString).join(',');\n      case 'ssv':\n        return param.map(this.paramToString).join(' ');\n      case 'tsv':\n        return param.map(this.paramToString).join('\\t');\n      case 'pipes':\n        return param.map(this.paramToString).join('|');\n      case 'multi':\n        // return the array directly as SuperAgent will handle it as expected\n        return param.map(this.paramToString);\n      default:\n        throw new Error('Unknown collection format: ' + collectionFormat);\n    }\n  };\n\n  /**\n   * Applies authentication headers to the request.\n   * @param {Object} request The request object created by a <code>superagent()</code> call.\n   * @param {Array.<String>} authNames An array of authentication method names.\n   */\n  exports.prototype.applyAuthToRequest = function(request, authNames) {\n    var _this = this;\n    authNames.forEach(function(authName) {\n      var auth = _this.authentications[authName];\n      switch (auth.type) {\n        case 'basic':\n          if (auth.username || auth.password) {\n            request.auth(auth.username || '', auth.password || '');\n          }\n          break;\n        case 'apiKey':\n          if (auth.apiKey) {\n            var data = {};\n            if (auth.apiKeyPrefix) {\n              data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n            } else {\n              data[auth.name] = auth.apiKey;\n            }\n            if (auth['in'] === 'header') {\n              request.set(data);\n            } else {\n              request.query(data);\n            }\n          }\n          break;\n        case 'oauth2':\n          if (auth.accessToken) {\n            request.set({'Authorization': 'Bearer ' + auth.accessToken});\n          }\n          break;\n        default:\n          throw new Error('Unknown authentication type: ' + auth.type);\n      }\n    });\n  };\n\n  /**\n   * Deserializes an HTTP response body into a value of the specified type.\n   * @param {Object} response A SuperAgent response object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns A value of the specified type.\n   */\n  exports.prototype.deserialize = function deserialize(response, returnType) {\n    if (response == null || returnType == null || response.status == 204) {\n      return null;\n    }\n    // Rely on SuperAgent for parsing response body.\n    // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n    var data = response.body;\n    if (data == null || (typeof data === 'object' && typeof data.length === 'undefined' && !Object.keys(data).length)) {\n      // SuperAgent does not always produce a body; use the unparsed response as a fallback\n      data = response.text;\n    }\n    return exports.convertToType(data, returnType);\n  };\n\n  /**\n   * Callback function to receive the result of the operation.\n   * @callback module:ApiClient~callApiCallback\n   * @param {String} error Error message, if any.\n   * @param data The data returned by the service call.\n   * @param {String} response The complete HTTP response.\n   */\n\n  /**\n   * Invokes the REST service using the supplied settings and parameters.\n   * @param {String} path The base URL to invoke.\n   * @param {String} httpMethod The HTTP method to use.\n   * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n   * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n   * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n   * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n   * @param {Object} bodyParam The value to pass as the request body.\n   * @param {Array.<String>} authNames An array of authentication type names.\n   * @param {Array.<String>} contentTypes An array of request MIME types.\n   * @param {Array.<String>} accepts An array of acceptable response MIME types.\n   * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n   * constructor for a complex type.\n   * @param {module:ApiClient~callApiCallback} callback The callback function.\n   * @returns {Object} The SuperAgent request object.\n   */\n  exports.prototype.callApi = function callApi(path, httpMethod, pathParams,\n      queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,\n      returnType, callback) {\n\n    var _this = this;\n    var url = this.buildUrl(path, pathParams);\n    var request = superagent(httpMethod, url);\n\n    // apply authentications\n    this.applyAuthToRequest(request, authNames);\n\n    // set query parameters\n    if (httpMethod.toUpperCase() === 'GET' && this.cache === false) {\n        queryParams['_'] = new Date().getTime();\n    }\n    request.query(this.normalizeParams(queryParams));\n\n    // set header parameters\n    request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n    // set request timeout\n    request.timeout(this.timeout);\n\n    var contentType = this.jsonPreferredMime(contentTypes);\n    if (contentType) {\n      // Issue with superagent and multipart/form-data (https://github.com/visionmedia/superagent/issues/746)\n      if(contentType != 'multipart/form-data') {\n        request.type(contentType);\n      }\n    } else if (!request.header['Content-Type']) {\n      request.type('application/json');\n    }\n\n    if (contentType === 'application/x-www-form-urlencoded') {\n      request.send(this.normalizeParams(formParams));\n    } else if (contentType == 'multipart/form-data') {\n      var _formParams = this.normalizeParams(formParams);\n      for (var key in _formParams) {\n        if (_formParams.hasOwnProperty(key)) {\n          if (this.isFileParam(_formParams[key])) {\n            // file field\n            request.attach(key, _formParams[key]);\n          } else {\n            request.field(key, _formParams[key]);\n          }\n        }\n      }\n    } else if (bodyParam) {\n      request.send(bodyParam);\n    }\n\n    var accept = this.jsonPreferredMime(accepts);\n    if (accept) {\n      request.accept(accept);\n    }\n\n\n    request.end(function(error, response) {\n      if (callback) {\n        var data = null;\n        if (!error) {\n          try {\n            data = _this.deserialize(response, returnType);\n          } catch (err) {\n            error = err;\n          }\n        }\n        callback(error, data, response);\n      }\n    });\n\n    return request;\n  };\n\n  /**\n   * Parses an ISO-8601 string representation of a date value.\n   * @param {String} str The date value as a string.\n   * @returns {Date} The parsed date object.\n   */\n  exports.parseDate = function(str) {\n    return new Date(str.replace(/T/i, ' '));\n  };\n\n  /**\n   * Converts a value to the specified type.\n   * @param {(String|Object)} data The data to convert, as a string or object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns An instance of the specified type.\n   */\n  exports.convertToType = function(data, type) {\n    switch (type) {\n      case 'Boolean':\n        return Boolean(data);\n      case 'Integer':\n        return parseInt(data, 10);\n      case 'Number':\n        return parseFloat(data);\n      case 'String':\n        return String(data);\n      case 'Date':\n        return this.parseDate(String(data));\n      default:\n        if (type === Object) {\n          // generic object, return directly\n          return data;\n        } else if (typeof type === 'function') {\n          // for model type like: User\n          return type.constructFromObject(data);\n        } else if (Array.isArray(type)) {\n          // for array type like: ['String']\n          var itemType = type[0];\n          return data.map(function(item) {\n            return exports.convertToType(item, itemType);\n          });\n        } else if (typeof type === 'object') {\n          // for plain object type like: {'String': 'Integer'}\n          var keyType, valueType;\n          for (var k in type) {\n            if (type.hasOwnProperty(k)) {\n              keyType = k;\n              valueType = type[k];\n              break;\n            }\n          }\n          var result = {};\n          for (var k in data) {\n            if (data.hasOwnProperty(k)) {\n              var key = exports.convertToType(k, keyType);\n              var value = exports.convertToType(data[k], valueType);\n              result[key] = value;\n            }\n          }\n          return result;\n        } else {\n          // for unknown type, return the data directly\n          return data;\n        }\n    }\n  };\n\n  /**\n   * Constructs a new map or array model from REST data.\n   * @param data {Object|Array} The REST data.\n   * @param obj {Object|Array} The target object or array.\n   */\n  exports.constructFromObject = function(data, obj, itemType) {\n    if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        if (data.hasOwnProperty(i))\n          obj[i] = exports.convertToType(data[i], itemType);\n      }\n    } else {\n      for (var k in data) {\n        if (data.hasOwnProperty(k))\n          obj[k] = exports.convertToType(data[k], itemType);\n      }\n    }\n  };\n\n  /**\n   * The default API client implementation.\n   * @type {module:ApiClient}\n   */\n  exports.instance = new exports();\n\n  return exports;\n}));\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button', 'model/ButtonsListResponse', 'model/Fabric', 'model/FabricsListResponse', 'model/Jean', 'model/Measurement', 'model/Order', 'model/OrderItem', 'model/OrdersListResponse', 'model/Thread', 'model/ThreadsListResponse', 'model/Transaction', 'model/User', 'model/UsersListResponse', 'api/DefaultApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./model/Button'), require('./model/ButtonsListResponse'), require('./model/Fabric'), require('./model/FabricsListResponse'), require('./model/Jean'), require('./model/Measurement'), require('./model/Order'), require('./model/OrderItem'), require('./model/OrdersListResponse'), require('./model/Thread'), require('./model/ThreadsListResponse'), require('./model/Transaction'), require('./model/User'), require('./model/UsersListResponse'), require('./api/DefaultApi'));\n  }\n}(function(ApiClient, Button, ButtonsListResponse, Fabric, FabricsListResponse, Jean, Measurement, Order, OrderItem, OrdersListResponse, Thread, ThreadsListResponse, Transaction, User, UsersListResponse, DefaultApi) {\n  'use strict';\n\n  /**\n   * ERROR_UNKNOWN.<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var BlueDeltaApi = require('index'); // See note below*.\n   * var xxxSvc = new BlueDeltaApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new BlueDeltaApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new BlueDeltaApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new BlueDeltaApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 1.0.0\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The Button model constructor.\n     * @property {module:model/Button}\n     */\n    Button: Button,\n    /**\n     * The ButtonsListResponse model constructor.\n     * @property {module:model/ButtonsListResponse}\n     */\n    ButtonsListResponse: ButtonsListResponse,\n    /**\n     * The Fabric model constructor.\n     * @property {module:model/Fabric}\n     */\n    Fabric: Fabric,\n    /**\n     * The FabricsListResponse model constructor.\n     * @property {module:model/FabricsListResponse}\n     */\n    FabricsListResponse: FabricsListResponse,\n    /**\n     * The Jean model constructor.\n     * @property {module:model/Jean}\n     */\n    Jean: Jean,\n    /**\n     * The Measurement model constructor.\n     * @property {module:model/Measurement}\n     */\n    Measurement: Measurement,\n    /**\n     * The Order model constructor.\n     * @property {module:model/Order}\n     */\n    Order: Order,\n    /**\n     * The OrderItem model constructor.\n     * @property {module:model/OrderItem}\n     */\n    OrderItem: OrderItem,\n    /**\n     * The OrdersListResponse model constructor.\n     * @property {module:model/OrdersListResponse}\n     */\n    OrdersListResponse: OrdersListResponse,\n    /**\n     * The Thread model constructor.\n     * @property {module:model/Thread}\n     */\n    Thread: Thread,\n    /**\n     * The ThreadsListResponse model constructor.\n     * @property {module:model/ThreadsListResponse}\n     */\n    ThreadsListResponse: ThreadsListResponse,\n    /**\n     * The Transaction model constructor.\n     * @property {module:model/Transaction}\n     */\n    Transaction: Transaction,\n    /**\n     * The User model constructor.\n     * @property {module:model/User}\n     */\n    User: User,\n    /**\n     * The UsersListResponse model constructor.\n     * @property {module:model/UsersListResponse}\n     */\n    UsersListResponse: UsersListResponse,\n    /**\n     * The DefaultApi service constructor.\n     * @property {module:api/DefaultApi}\n     */\n    DefaultApi: DefaultApi\n  };\n\n  return exports;\n}));\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button', 'model/ButtonsListResponse', 'model/Fabric', 'model/FabricsListResponse', 'model/Order', 'model/OrdersListResponse', 'model/Thread', 'model/ThreadsListResponse', 'model/User', 'model/UsersListResponse'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/Button'), require('../model/ButtonsListResponse'), require('../model/Fabric'), require('../model/FabricsListResponse'), require('../model/Order'), require('../model/OrdersListResponse'), require('../model/Thread'), require('../model/ThreadsListResponse'), require('../model/User'), require('../model/UsersListResponse'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.DefaultApi = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Button, root.BlueDeltaApi.ButtonsListResponse, root.BlueDeltaApi.Fabric, root.BlueDeltaApi.FabricsListResponse, root.BlueDeltaApi.Order, root.BlueDeltaApi.OrdersListResponse, root.BlueDeltaApi.Thread, root.BlueDeltaApi.ThreadsListResponse, root.BlueDeltaApi.User, root.BlueDeltaApi.UsersListResponse);\n  }\n}(this, function(ApiClient, Button, ButtonsListResponse, Fabric, FabricsListResponse, Order, OrdersListResponse, Thread, ThreadsListResponse, User, UsersListResponse) {\n  'use strict';\n\n  /**\n   * Default service.\n   * @module api/DefaultApi\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new DefaultApi. \n   * @alias module:api/DefaultApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the buttonsButtonIdOptions operation.\n     * @callback module:api/DefaultApi~buttonsButtonIdOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} buttonId \n     * @param {module:api/DefaultApi~buttonsButtonIdOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.buttonsButtonIdOptions = function(buttonId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'buttonId' is set\n      if (buttonId == undefined || buttonId == null) {\n        throw new Error(\"Missing the required parameter 'buttonId' when calling buttonsButtonIdOptions\");\n      }\n\n\n      var pathParams = {\n        'buttonId': buttonId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/buttons/{buttonId}', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsCreate operation.\n     * @callback module:api/DefaultApi~buttonsCreateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Button} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:model/Button} button \n     * @param {module:api/DefaultApi~buttonsCreateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Button}\n     */\n    this.buttonsCreate = function(button, callback) {\n      var postBody = button;\n\n      // verify the required parameter 'button' is set\n      if (button == undefined || button == null) {\n        throw new Error(\"Missing the required parameter 'button' when calling buttonsCreate\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Button;\n\n      return this.apiClient.callApi(\n        '/buttons', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsDelete operation.\n     * @callback module:api/DefaultApi~buttonsDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} buttonId \n     * @param {module:api/DefaultApi~buttonsDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.buttonsDelete = function(buttonId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'buttonId' is set\n      if (buttonId == undefined || buttonId == null) {\n        throw new Error(\"Missing the required parameter 'buttonId' when calling buttonsDelete\");\n      }\n\n\n      var pathParams = {\n        'buttonId': buttonId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/buttons/{buttonId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsGet operation.\n     * @callback module:api/DefaultApi~buttonsGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Button} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} buttonId \n     * @param {module:api/DefaultApi~buttonsGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Button}\n     */\n    this.buttonsGet = function(buttonId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'buttonId' is set\n      if (buttonId == undefined || buttonId == null) {\n        throw new Error(\"Missing the required parameter 'buttonId' when calling buttonsGet\");\n      }\n\n\n      var pathParams = {\n        'buttonId': buttonId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Button;\n\n      return this.apiClient.callApi(\n        '/buttons/{buttonId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsList operation.\n     * @callback module:api/DefaultApi~buttonsListCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/ButtonsListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~buttonsListCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/ButtonsListResponse}\n     */\n    this.buttonsList = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = ButtonsListResponse;\n\n      return this.apiClient.callApi(\n        '/buttons', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsOptions operation.\n     * @callback module:api/DefaultApi~buttonsOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~buttonsOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.buttonsOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/buttons', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the buttonsUpdate operation.\n     * @callback module:api/DefaultApi~buttonsUpdateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Button} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} buttonId \n     * @param {module:model/Button} button \n     * @param {module:api/DefaultApi~buttonsUpdateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Button}\n     */\n    this.buttonsUpdate = function(buttonId, button, callback) {\n      var postBody = button;\n\n      // verify the required parameter 'buttonId' is set\n      if (buttonId == undefined || buttonId == null) {\n        throw new Error(\"Missing the required parameter 'buttonId' when calling buttonsUpdate\");\n      }\n\n      // verify the required parameter 'button' is set\n      if (button == undefined || button == null) {\n        throw new Error(\"Missing the required parameter 'button' when calling buttonsUpdate\");\n      }\n\n\n      var pathParams = {\n        'buttonId': buttonId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Button;\n\n      return this.apiClient.callApi(\n        '/buttons/{buttonId}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsCreate operation.\n     * @callback module:api/DefaultApi~fabricsCreateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Fabric} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:model/Fabric} fabric \n     * @param {module:api/DefaultApi~fabricsCreateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Fabric}\n     */\n    this.fabricsCreate = function(fabric, callback) {\n      var postBody = fabric;\n\n      // verify the required parameter 'fabric' is set\n      if (fabric == undefined || fabric == null) {\n        throw new Error(\"Missing the required parameter 'fabric' when calling fabricsCreate\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Fabric;\n\n      return this.apiClient.callApi(\n        '/fabrics', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsDelete operation.\n     * @callback module:api/DefaultApi~fabricsDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} fabricId \n     * @param {module:api/DefaultApi~fabricsDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.fabricsDelete = function(fabricId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fabricId' is set\n      if (fabricId == undefined || fabricId == null) {\n        throw new Error(\"Missing the required parameter 'fabricId' when calling fabricsDelete\");\n      }\n\n\n      var pathParams = {\n        'fabricId': fabricId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/fabrics/{fabricId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsFabricIdOptions operation.\n     * @callback module:api/DefaultApi~fabricsFabricIdOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} fabricId \n     * @param {module:api/DefaultApi~fabricsFabricIdOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.fabricsFabricIdOptions = function(fabricId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fabricId' is set\n      if (fabricId == undefined || fabricId == null) {\n        throw new Error(\"Missing the required parameter 'fabricId' when calling fabricsFabricIdOptions\");\n      }\n\n\n      var pathParams = {\n        'fabricId': fabricId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/fabrics/{fabricId}', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsGet operation.\n     * @callback module:api/DefaultApi~fabricsGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Fabric} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} fabricId \n     * @param {module:api/DefaultApi~fabricsGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Fabric}\n     */\n    this.fabricsGet = function(fabricId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'fabricId' is set\n      if (fabricId == undefined || fabricId == null) {\n        throw new Error(\"Missing the required parameter 'fabricId' when calling fabricsGet\");\n      }\n\n\n      var pathParams = {\n        'fabricId': fabricId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Fabric;\n\n      return this.apiClient.callApi(\n        '/fabrics/{fabricId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsList operation.\n     * @callback module:api/DefaultApi~fabricsListCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/FabricsListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~fabricsListCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/FabricsListResponse}\n     */\n    this.fabricsList = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = FabricsListResponse;\n\n      return this.apiClient.callApi(\n        '/fabrics', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsOptions operation.\n     * @callback module:api/DefaultApi~fabricsOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~fabricsOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.fabricsOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/fabrics', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the fabricsUpdate operation.\n     * @callback module:api/DefaultApi~fabricsUpdateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Fabric} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} fabricId \n     * @param {module:model/Fabric} fabric \n     * @param {module:api/DefaultApi~fabricsUpdateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Fabric}\n     */\n    this.fabricsUpdate = function(fabricId, fabric, callback) {\n      var postBody = fabric;\n\n      // verify the required parameter 'fabricId' is set\n      if (fabricId == undefined || fabricId == null) {\n        throw new Error(\"Missing the required parameter 'fabricId' when calling fabricsUpdate\");\n      }\n\n      // verify the required parameter 'fabric' is set\n      if (fabric == undefined || fabric == null) {\n        throw new Error(\"Missing the required parameter 'fabric' when calling fabricsUpdate\");\n      }\n\n\n      var pathParams = {\n        'fabricId': fabricId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Fabric;\n\n      return this.apiClient.callApi(\n        '/fabrics/{fabricId}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the orderCreate operation.\n     * @callback module:api/DefaultApi~orderCreateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Order} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:model/Order} order \n     * @param {module:api/DefaultApi~orderCreateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Order}\n     */\n    this.orderCreate = function(order, callback) {\n      var postBody = order;\n\n      // verify the required parameter 'order' is set\n      if (order == undefined || order == null) {\n        throw new Error(\"Missing the required parameter 'order' when calling orderCreate\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Order;\n\n      return this.apiClient.callApi(\n        '/orders', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersDelete operation.\n     * @callback module:api/DefaultApi~ordersDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} orderId \n     * @param {module:api/DefaultApi~ordersDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.ordersDelete = function(orderId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'orderId' is set\n      if (orderId == undefined || orderId == null) {\n        throw new Error(\"Missing the required parameter 'orderId' when calling ordersDelete\");\n      }\n\n\n      var pathParams = {\n        'orderId': orderId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/orders/{orderId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersGet operation.\n     * @callback module:api/DefaultApi~ordersGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Order} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} orderId \n     * @param {module:api/DefaultApi~ordersGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Order}\n     */\n    this.ordersGet = function(orderId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'orderId' is set\n      if (orderId == undefined || orderId == null) {\n        throw new Error(\"Missing the required parameter 'orderId' when calling ordersGet\");\n      }\n\n\n      var pathParams = {\n        'orderId': orderId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Order;\n\n      return this.apiClient.callApi(\n        '/orders/{orderId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersList operation.\n     * @callback module:api/DefaultApi~ordersListCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/OrdersListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~ordersListCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/OrdersListResponse}\n     */\n    this.ordersList = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = OrdersListResponse;\n\n      return this.apiClient.callApi(\n        '/orders', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersListByUser operation.\n     * @callback module:api/DefaultApi~ordersListByUserCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/OrdersListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:api/DefaultApi~ordersListByUserCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/OrdersListResponse}\n     */\n    this.ordersListByUser = function(userId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling ordersListByUser\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = OrdersListResponse;\n\n      return this.apiClient.callApi(\n        '/users/{userId}/orders', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersOptions operation.\n     * @callback module:api/DefaultApi~ordersOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~ordersOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.ordersOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/orders', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersOrderIdOptions operation.\n     * @callback module:api/DefaultApi~ordersOrderIdOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} orderId \n     * @param {module:api/DefaultApi~ordersOrderIdOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.ordersOrderIdOptions = function(orderId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'orderId' is set\n      if (orderId == undefined || orderId == null) {\n        throw new Error(\"Missing the required parameter 'orderId' when calling ordersOrderIdOptions\");\n      }\n\n\n      var pathParams = {\n        'orderId': orderId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/orders/{orderId}', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the ordersUpdate operation.\n     * @callback module:api/DefaultApi~ordersUpdateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Order} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} orderId \n     * @param {module:model/Order} order \n     * @param {module:api/DefaultApi~ordersUpdateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Order}\n     */\n    this.ordersUpdate = function(orderId, order, callback) {\n      var postBody = order;\n\n      // verify the required parameter 'orderId' is set\n      if (orderId == undefined || orderId == null) {\n        throw new Error(\"Missing the required parameter 'orderId' when calling ordersUpdate\");\n      }\n\n      // verify the required parameter 'order' is set\n      if (order == undefined || order == null) {\n        throw new Error(\"Missing the required parameter 'order' when calling ordersUpdate\");\n      }\n\n\n      var pathParams = {\n        'orderId': orderId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Order;\n\n      return this.apiClient.callApi(\n        '/orders/{orderId}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the pingOptions operation.\n     * @callback module:api/DefaultApi~pingOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~pingOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.pingOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/ping', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the pingPingOperation operation.\n     * @callback module:api/DefaultApi~pingPingOperationCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~pingPingOperationCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.pingPingOperation = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/ping', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsCreate operation.\n     * @callback module:api/DefaultApi~threadsCreateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Thread} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:model/Thread} thread \n     * @param {module:api/DefaultApi~threadsCreateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Thread}\n     */\n    this.threadsCreate = function(thread, callback) {\n      var postBody = thread;\n\n      // verify the required parameter 'thread' is set\n      if (thread == undefined || thread == null) {\n        throw new Error(\"Missing the required parameter 'thread' when calling threadsCreate\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Thread;\n\n      return this.apiClient.callApi(\n        '/threads', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsDelete operation.\n     * @callback module:api/DefaultApi~threadsDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} threadId \n     * @param {module:api/DefaultApi~threadsDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.threadsDelete = function(threadId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'threadId' is set\n      if (threadId == undefined || threadId == null) {\n        throw new Error(\"Missing the required parameter 'threadId' when calling threadsDelete\");\n      }\n\n\n      var pathParams = {\n        'threadId': threadId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/threads/{threadId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsGet operation.\n     * @callback module:api/DefaultApi~threadsGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Thread} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} threadId \n     * @param {module:api/DefaultApi~threadsGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Thread}\n     */\n    this.threadsGet = function(threadId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'threadId' is set\n      if (threadId == undefined || threadId == null) {\n        throw new Error(\"Missing the required parameter 'threadId' when calling threadsGet\");\n      }\n\n\n      var pathParams = {\n        'threadId': threadId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Thread;\n\n      return this.apiClient.callApi(\n        '/threads/{threadId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsList operation.\n     * @callback module:api/DefaultApi~threadsListCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/ThreadsListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~threadsListCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/ThreadsListResponse}\n     */\n    this.threadsList = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = ThreadsListResponse;\n\n      return this.apiClient.callApi(\n        '/threads', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsOptions operation.\n     * @callback module:api/DefaultApi~threadsOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~threadsOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.threadsOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/threads', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsThreadIdOptions operation.\n     * @callback module:api/DefaultApi~threadsThreadIdOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} threadId \n     * @param {module:api/DefaultApi~threadsThreadIdOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.threadsThreadIdOptions = function(threadId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'threadId' is set\n      if (threadId == undefined || threadId == null) {\n        throw new Error(\"Missing the required parameter 'threadId' when calling threadsThreadIdOptions\");\n      }\n\n\n      var pathParams = {\n        'threadId': threadId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/threads/{threadId}', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the threadsUpdate operation.\n     * @callback module:api/DefaultApi~threadsUpdateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/Thread} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} threadId \n     * @param {module:model/Thread} thread \n     * @param {module:api/DefaultApi~threadsUpdateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/Thread}\n     */\n    this.threadsUpdate = function(threadId, thread, callback) {\n      var postBody = thread;\n\n      // verify the required parameter 'threadId' is set\n      if (threadId == undefined || threadId == null) {\n        throw new Error(\"Missing the required parameter 'threadId' when calling threadsUpdate\");\n      }\n\n      // verify the required parameter 'thread' is set\n      if (thread == undefined || thread == null) {\n        throw new Error(\"Missing the required parameter 'thread' when calling threadsUpdate\");\n      }\n\n\n      var pathParams = {\n        'threadId': threadId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = Thread;\n\n      return this.apiClient.callApi(\n        '/threads/{threadId}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersCreate operation.\n     * @callback module:api/DefaultApi~usersCreateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:model/User} user \n     * @param {module:api/DefaultApi~usersCreateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.usersCreate = function(user, callback) {\n      var postBody = user;\n\n      // verify the required parameter 'user' is set\n      if (user == undefined || user == null) {\n        throw new Error(\"Missing the required parameter 'user' when calling usersCreate\");\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/users', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersDelete operation.\n     * @callback module:api/DefaultApi~usersDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:api/DefaultApi~usersDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.usersDelete = function(userId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling usersDelete\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/users/{userId}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersGet operation.\n     * @callback module:api/DefaultApi~usersGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:api/DefaultApi~usersGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.usersGet = function(userId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling usersGet\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/users/{userId}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersList operation.\n     * @callback module:api/DefaultApi~usersListCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/UsersListResponse} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~usersListCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/UsersListResponse}\n     */\n    this.usersList = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['blue-delta-userPool-authorizer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = UsersListResponse;\n\n      return this.apiClient.callApi(\n        '/users', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersOptions operation.\n     * @callback module:api/DefaultApi~usersOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {module:api/DefaultApi~usersOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.usersOptions = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/users', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersUpdate operation.\n     * @callback module:api/DefaultApi~usersUpdateCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/User} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:model/User} user \n     * @param {module:api/DefaultApi~usersUpdateCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/User}\n     */\n    this.usersUpdate = function(userId, user, callback) {\n      var postBody = user;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling usersUpdate\");\n      }\n\n      // verify the required parameter 'user' is set\n      if (user == undefined || user == null) {\n        throw new Error(\"Missing the required parameter 'user' when calling usersUpdate\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['sigv4'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = User;\n\n      return this.apiClient.callApi(\n        '/users/{userId}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersUserIdOptions operation.\n     * @callback module:api/DefaultApi~usersUserIdOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:api/DefaultApi~usersUserIdOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.usersUserIdOptions = function(userId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling usersUserIdOptions\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/users/{userId}', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the usersUserIdOrdersOptions operation.\n     * @callback module:api/DefaultApi~usersUserIdOrdersOptionsCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * @param {String} userId \n     * @param {module:api/DefaultApi~usersUserIdOrdersOptionsCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.usersUserIdOrdersOptions = function(userId, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'userId' is set\n      if (userId == undefined || userId == null) {\n        throw new Error(\"Missing the required parameter 'userId' when calling usersUserIdOrdersOptions\");\n      }\n\n\n      var pathParams = {\n        'userId': userId\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = [];\n      var contentTypes = ['application/json'];\n      var accepts = [];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/users/{userId}/orders', 'OPTIONS',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Button = factory(root.BlueDeltaApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Button model module.\n   * @module model/Button\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Button</code>.\n   * @alias module:model/Button\n   * @class\n   * @param buttonId {String} \n   */\n  var exports = function(buttonId) {\n    var _this = this;\n\n    _this['buttonId'] = buttonId;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Button</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Button} obj Optional instance to populate.\n   * @return {module:model/Button} The populated <code>Button</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('buttonId')) {\n        obj['buttonId'] = ApiClient.convertToType(data['buttonId'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('thumb')) {\n        obj['thumb'] = ApiClient.convertToType(data['thumb'], 'String');\n      }\n      if (data.hasOwnProperty('layer')) {\n        obj['layer'] = ApiClient.convertToType(data['layer'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} buttonId\n   */\n  exports.prototype['buttonId'] = undefined;\n  /**\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * @member {String} thumb\n   */\n  exports.prototype['thumb'] = undefined;\n  /**\n   * @member {String} layer\n   */\n  exports.prototype['layer'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.ButtonsListResponse = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Button);\n  }\n}(this, function(ApiClient, Button) {\n  'use strict';\n\n\n\n\n  /**\n   * The ButtonsListResponse model module.\n   * @module model/ButtonsListResponse\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>ButtonsListResponse</code>.\n   * @alias module:model/ButtonsListResponse\n   * @class\n   * @param items {Array.<module:model/Button>} \n   */\n  var exports = function(items) {\n    var _this = this;\n\n    _this['items'] = items;\n  };\n\n  /**\n   * Constructs a <code>ButtonsListResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ButtonsListResponse} obj Optional instance to populate.\n   * @return {module:model/ButtonsListResponse} The populated <code>ButtonsListResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('items')) {\n        obj['items'] = ApiClient.convertToType(data['items'], [Button]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Button>} items\n   */\n  exports.prototype['items'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Fabric = factory(root.BlueDeltaApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Fabric model module.\n   * @module model/Fabric\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Fabric</code>.\n   * @alias module:model/Fabric\n   * @class\n   * @param fabricId {String} \n   */\n  var exports = function(fabricId) {\n    var _this = this;\n\n    _this['fabricId'] = fabricId;\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Fabric</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Fabric} obj Optional instance to populate.\n   * @return {module:model/Fabric} The populated <code>Fabric</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('fabricId')) {\n        obj['fabricId'] = ApiClient.convertToType(data['fabricId'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('weight')) {\n        obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');\n      }\n      if (data.hasOwnProperty('description')) {\n        obj['description'] = ApiClient.convertToType(data['description'], 'String');\n      }\n      if (data.hasOwnProperty('materials')) {\n        obj['materials'] = ApiClient.convertToType(data['materials'], 'String');\n      }\n      if (data.hasOwnProperty('supplier')) {\n        obj['supplier'] = ApiClient.convertToType(data['supplier'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} fabricId\n   */\n  exports.prototype['fabricId'] = undefined;\n  /**\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * @member {Number} weight\n   */\n  exports.prototype['weight'] = undefined;\n  /**\n   * @member {String} description\n   */\n  exports.prototype['description'] = undefined;\n  /**\n   * @member {String} materials\n   */\n  exports.prototype['materials'] = undefined;\n  /**\n   * @member {String} supplier\n   */\n  exports.prototype['supplier'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Fabric'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Fabric'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.FabricsListResponse = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Fabric);\n  }\n}(this, function(ApiClient, Fabric) {\n  'use strict';\n\n\n\n\n  /**\n   * The FabricsListResponse model module.\n   * @module model/FabricsListResponse\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>FabricsListResponse</code>.\n   * @alias module:model/FabricsListResponse\n   * @class\n   * @param items {Array.<module:model/Fabric>} \n   */\n  var exports = function(items) {\n    var _this = this;\n\n    _this['items'] = items;\n  };\n\n  /**\n   * Constructs a <code>FabricsListResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/FabricsListResponse} obj Optional instance to populate.\n   * @return {module:model/FabricsListResponse} The populated <code>FabricsListResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('items')) {\n        obj['items'] = ApiClient.convertToType(data['items'], [Fabric]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Fabric>} items\n   */\n  exports.prototype['items'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Button', 'model/Fabric', 'model/Measurement', 'model/Thread'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Button'), require('./Fabric'), require('./Measurement'), require('./Thread'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Jean = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Button, root.BlueDeltaApi.Fabric, root.BlueDeltaApi.Measurement, root.BlueDeltaApi.Thread);\n  }\n}(this, function(ApiClient, Button, Fabric, Measurement, Thread) {\n  'use strict';\n\n\n\n\n  /**\n   * The Jean model module.\n   * @module model/Jean\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Jean</code>.\n   * @alias module:model/Jean\n   * @class\n   * @param jeanId {String} \n   */\n  var exports = function(jeanId) {\n    var _this = this;\n\n    _this['jeanId'] = jeanId;\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Jean</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Jean} obj Optional instance to populate.\n   * @return {module:model/Jean} The populated <code>Jean</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('jeanId')) {\n        obj['jeanId'] = ApiClient.convertToType(data['jeanId'], 'String');\n      }\n      if (data.hasOwnProperty('measurement')) {\n        obj['measurement'] = Measurement.constructFromObject(data['measurement']);\n      }\n      if (data.hasOwnProperty('thread')) {\n        obj['thread'] = Thread.constructFromObject(data['thread']);\n      }\n      if (data.hasOwnProperty('fabric')) {\n        obj['fabric'] = Fabric.constructFromObject(data['fabric']);\n      }\n      if (data.hasOwnProperty('button')) {\n        obj['button'] = Button.constructFromObject(data['button']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} jeanId\n   */\n  exports.prototype['jeanId'] = undefined;\n  /**\n   * @member {module:model/Measurement} measurement\n   */\n  exports.prototype['measurement'] = undefined;\n  /**\n   * @member {module:model/Thread} thread\n   */\n  exports.prototype['thread'] = undefined;\n  /**\n   * @member {module:model/Fabric} fabric\n   */\n  exports.prototype['fabric'] = undefined;\n  /**\n   * @member {module:model/Button} button\n   */\n  exports.prototype['button'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Measurement = factory(root.BlueDeltaApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Measurement model module.\n   * @module model/Measurement\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Measurement</code>.\n   * @alias module:model/Measurement\n   * @class\n   * @param measurementId {String} \n   */\n  var exports = function(measurementId) {\n    var _this = this;\n\n    _this['measurementId'] = measurementId;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Measurement</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Measurement} obj Optional instance to populate.\n   * @return {module:model/Measurement} The populated <code>Measurement</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('measurementId')) {\n        obj['measurementId'] = ApiClient.convertToType(data['measurementId'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');\n      }\n      if (data.hasOwnProperty('waist')) {\n        obj['waist'] = ApiClient.convertToType(data['waist'], 'Number');\n      }\n      if (data.hasOwnProperty('leg')) {\n        obj['leg'] = ApiClient.convertToType(data['leg'], 'Number');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} measurementId\n   */\n  exports.prototype['measurementId'] = undefined;\n  /**\n   * @member {String} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * @member {Number} waist\n   */\n  exports.prototype['waist'] = undefined;\n  /**\n   * @member {Number} leg\n   */\n  exports.prototype['leg'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/OrderItem', 'model/Transaction'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./OrderItem'), require('./Transaction'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Order = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.OrderItem, root.BlueDeltaApi.Transaction);\n  }\n}(this, function(ApiClient, OrderItem, Transaction) {\n  'use strict';\n\n\n\n\n  /**\n   * The Order model module.\n   * @module model/Order\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Order</code>.\n   * @alias module:model/Order\n   * @class\n   * @param userId {String} \n   */\n  var exports = function(userId) {\n    var _this = this;\n\n\n    _this['userId'] = userId;\n\n\n  };\n\n  /**\n   * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Order} obj Optional instance to populate.\n   * @return {module:model/Order} The populated <code>Order</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('orderId')) {\n        obj['orderId'] = ApiClient.convertToType(data['orderId'], 'String');\n      }\n      if (data.hasOwnProperty('userId')) {\n        obj['userId'] = ApiClient.convertToType(data['userId'], 'String');\n      }\n      if (data.hasOwnProperty('orderItems')) {\n        obj['orderItems'] = ApiClient.convertToType(data['orderItems'], [OrderItem]);\n      }\n      if (data.hasOwnProperty('transaction')) {\n        obj['transaction'] = Transaction.constructFromObject(data['transaction']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} orderId\n   */\n  exports.prototype['orderId'] = undefined;\n  /**\n   * @member {String} userId\n   */\n  exports.prototype['userId'] = undefined;\n  /**\n   * @member {Array.<module:model/OrderItem>} orderItems\n   */\n  exports.prototype['orderItems'] = undefined;\n  /**\n   * @member {module:model/Transaction} transaction\n   */\n  exports.prototype['transaction'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Jean'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Jean'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.OrderItem = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Jean);\n  }\n}(this, function(ApiClient, Jean) {\n  'use strict';\n\n\n\n\n  /**\n   * The OrderItem model module.\n   * @module model/OrderItem\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>OrderItem</code>.\n   * @alias module:model/OrderItem\n   * @class\n   * @param jean {module:model/Jean} \n   */\n  var exports = function(jean) {\n    var _this = this;\n\n    _this['jean'] = jean;\n\n\n  };\n\n  /**\n   * Constructs a <code>OrderItem</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/OrderItem} obj Optional instance to populate.\n   * @return {module:model/OrderItem} The populated <code>OrderItem</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('jean')) {\n        obj['jean'] = Jean.constructFromObject(data['jean']);\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('tracking')) {\n        obj['tracking'] = ApiClient.convertToType(data['tracking'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {module:model/Jean} jean\n   */\n  exports.prototype['jean'] = undefined;\n  /**\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * @member {String} tracking\n   */\n  exports.prototype['tracking'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Order'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Order'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.OrdersListResponse = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Order);\n  }\n}(this, function(ApiClient, Order) {\n  'use strict';\n\n\n\n\n  /**\n   * The OrdersListResponse model module.\n   * @module model/OrdersListResponse\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>OrdersListResponse</code>.\n   * @alias module:model/OrdersListResponse\n   * @class\n   * @param items {Array.<module:model/Order>} \n   */\n  var exports = function(items) {\n    var _this = this;\n\n    _this['items'] = items;\n  };\n\n  /**\n   * Constructs a <code>OrdersListResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/OrdersListResponse} obj Optional instance to populate.\n   * @return {module:model/OrdersListResponse} The populated <code>OrdersListResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('items')) {\n        obj['items'] = ApiClient.convertToType(data['items'], [Order]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Order>} items\n   */\n  exports.prototype['items'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Thread = factory(root.BlueDeltaApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Thread model module.\n   * @module model/Thread\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Thread</code>.\n   * @alias module:model/Thread\n   * @class\n   * @param threadId {String} \n   */\n  var exports = function(threadId) {\n    var _this = this;\n\n    _this['threadId'] = threadId;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Thread</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Thread} obj Optional instance to populate.\n   * @return {module:model/Thread} The populated <code>Thread</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('threadId')) {\n        obj['threadId'] = ApiClient.convertToType(data['threadId'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n      if (data.hasOwnProperty('thumb')) {\n        obj['thumb'] = ApiClient.convertToType(data['thumb'], 'String');\n      }\n      if (data.hasOwnProperty('layer')) {\n        obj['layer'] = ApiClient.convertToType(data['layer'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} threadId\n   */\n  exports.prototype['threadId'] = undefined;\n  /**\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n  /**\n   * @member {String} thumb\n   */\n  exports.prototype['thumb'] = undefined;\n  /**\n   * @member {String} layer\n   */\n  exports.prototype['layer'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Thread'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Thread'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.ThreadsListResponse = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Thread);\n  }\n}(this, function(ApiClient, Thread) {\n  'use strict';\n\n\n\n\n  /**\n   * The ThreadsListResponse model module.\n   * @module model/ThreadsListResponse\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>ThreadsListResponse</code>.\n   * @alias module:model/ThreadsListResponse\n   * @class\n   * @param items {Array.<module:model/Thread>} \n   */\n  var exports = function(items) {\n    var _this = this;\n\n    _this['items'] = items;\n  };\n\n  /**\n   * Constructs a <code>ThreadsListResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ThreadsListResponse} obj Optional instance to populate.\n   * @return {module:model/ThreadsListResponse} The populated <code>ThreadsListResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('items')) {\n        obj['items'] = ApiClient.convertToType(data['items'], [Thread]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/Thread>} items\n   */\n  exports.prototype['items'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.Transaction = factory(root.BlueDeltaApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Transaction model module.\n   * @module model/Transaction\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>Transaction</code>.\n   * @alias module:model/Transaction\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Transaction} obj Optional instance to populate.\n   * @return {module:model/Transaction} The populated <code>Transaction</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('transactionId')) {\n        obj['transactionId'] = ApiClient.convertToType(data['transactionId'], 'String');\n      }\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} transactionId\n   */\n  exports.prototype['transactionId'] = undefined;\n  /**\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Jean'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Jean'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.User = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.Jean);\n  }\n}(this, function(ApiClient, Jean) {\n  'use strict';\n\n\n\n\n  /**\n   * The User model module.\n   * @module model/User\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>User</code>.\n   * @alias module:model/User\n   * @class\n   * @param identityId {String} \n   */\n  var exports = function(identityId) {\n    var _this = this;\n\n    _this['identityId'] = identityId;\n\n  };\n\n  /**\n   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/User} obj Optional instance to populate.\n   * @return {module:model/User} The populated <code>User</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('identityId')) {\n        obj['identityId'] = ApiClient.convertToType(data['identityId'], 'String');\n      }\n      if (data.hasOwnProperty('jeans')) {\n        obj['jeans'] = ApiClient.convertToType(data['jeans'], [Jean]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} identityId\n   */\n  exports.prototype['identityId'] = undefined;\n  /**\n   * @member {Array.<module:model/Jean>} jeans\n   */\n  exports.prototype['jeans'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * BlueDelta-API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/User'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./User'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.BlueDeltaApi) {\n      root.BlueDeltaApi = {};\n    }\n    root.BlueDeltaApi.UsersListResponse = factory(root.BlueDeltaApi.ApiClient, root.BlueDeltaApi.User);\n  }\n}(this, function(ApiClient, User) {\n  'use strict';\n\n\n\n\n  /**\n   * The UsersListResponse model module.\n   * @module model/UsersListResponse\n   * @version 1.0.0\n   */\n\n  /**\n   * Constructs a new <code>UsersListResponse</code>.\n   * @alias module:model/UsersListResponse\n   * @class\n   * @param items {Array.<module:model/User>} \n   */\n  var exports = function(items) {\n    var _this = this;\n\n    _this['items'] = items;\n  };\n\n  /**\n   * Constructs a <code>UsersListResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/UsersListResponse} obj Optional instance to populate.\n   * @return {module:model/UsersListResponse} The populated <code>UsersListResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('items')) {\n        obj['items'] = ApiClient.convertToType(data['items'], [User]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/User>} items\n   */\n  exports.prototype['items'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n"]}